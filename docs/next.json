{"meta":{"version":"0.3.3","format":20,"date":1641482924270},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"<div align=\"center\">\n    \n   # <img src=\"https://cdn.discordapp.com/avatars/834822955229380619/7d0142158babe0375e7cc633e87c06d4.png\" height=\"30\"> GCommands\n    \n  <br />\n  <p>\n    <a href=\"https://www.npmjs.com/package/gcommands\"><img src=\"https://nodei.co/npm/gcommands.png?downloads=true&stars=true\" alt=\"NPM Banner\"></a>\n  </p>\n  <p>\n    <a href=\"https://ko-fi.com/H2H05FNRL\"><img src=\"https://img.shields.io/badge/Kofi-Donate-yellow?style=for-the-badge\" height=\"30\" /></a>\n    <a href=\"https://github.com/Garlic-Team/GCommands\"><img src=\"https://img.shields.io/badge/Open-Source-blue?style=for-the-badge\" height=\"30\" /></a>\n    <img src=\"https://img.shields.io/badge/Made%20With-TypeScript-red?style=for-the-badge\" height=\"30\" />\n  </p>\n</div>\n\n---\n\n## üìÇ | Installation\n\n```sh\n# Latest (recommended)\nnpm install gcommands@latest\nyarn add gcommands@latest\n\n# Next Version (unstable, under development)\nnpm install gcommands@next\nyarn add gcommands@next\n```\n\n## üê¢ | Guide & Documentation\nTo help you learn more about GCommands we have a [guide](https://garlic-team.js.org/guide/) and [documentation](https://garlic-team.js.org/docs/#/docs/gcommands/latest/general/welcome) for you.  \nIf you're still in trouble, you can join our [Garlic Team](https://discord.gg/AjKJSBbGm2) discord server.\n\n## üëÄ | Features\n\n- Flexible\n- Supports slash, legacy and context menus\n- Supports many types of arguments\n- Supports custom plugins\n- Built-in command, listener, component handler\n","path":"README.md"}}}},"classes":[{"name":"Argument","construct":{"name":"constructor","params":[{"name":"options","optional":false,"type":[[["ArgumentOptions"]]]}],"returns":[[["Argument"]]],"meta":{"line":51,"file":"Argument.ts","path":"src/lib/structures"}},"props":[{"name":"channelTypes","readonly":true,"type":[[["Array","<"],["'GUILD","_"],["TEXT'"," | "],["'GUILD","_"],["NEWS","_"],["THREAD'"," | "],["'GUILD","_"],["PUBLIC","_"],["THREAD'"," | "],["'GUILD","_"],["PRIVATE","_"],["THREAD'"," | "],["'GUILD","_"],["CATEGORY'"," | "],["'GUILD","_"],["STAGE","_"],["VOICE'"," | "],["'GUILD","_"],["STORE'"," | "],["'GUILD","_"],["VOICE'"," | "],["ChannelType",">"]]],"meta":{"line":48,"file":"Argument.ts","path":"src/lib/structures"}},{"name":"choices","readonly":true,"type":[[["Array","<"],["CommandArgumentChoice",">"]]],"meta":{"line":46,"file":"Argument.ts","path":"src/lib/structures"}},{"name":"description","readonly":true,"type":[[["string"]]],"meta":{"line":43,"file":"Argument.ts","path":"src/lib/structures"}},{"name":"name","readonly":true,"type":[[["string"]]],"meta":{"line":42,"file":"Argument.ts","path":"src/lib/structures"}},{"name":"options","readonly":true,"type":[[["Array","<"],["CommandArgument"," | "],["Argument",">"]]],"meta":{"line":47,"file":"Argument.ts","path":"src/lib/structures"}},{"name":"required","readonly":true,"default":"false","type":[[["boolean"]]],"meta":{"line":45,"file":"Argument.ts","path":"src/lib/structures"}},{"name":"run","type":[[["("],["ctx",": "],["AutocompleteContext","<"],["CacheType",">) => "],["any"]]],"meta":{"line":49,"file":"Argument.ts","path":"src/lib/structures"}},{"name":"type","readonly":true,"type":[[["'SUB","_"],["COMMAND'"," | "],["'SUB","_"],["COMMAND","_"],["GROUP'"," | "],["'STRING'"," | "],["'INTEGER'"," | "],["'BOOLEAN'"," | "],["'USER'"," | "],["'CHANNEL'"," | "],["'ROLE'"," | "],["'MENTIONABLE'"," | "],["'NUMBER'"," | "],["ArgumentType"]]],"meta":{"line":44,"file":"Argument.ts","path":"src/lib/structures"}}],"methods":[{"name":"toAPIArgument","scope":"static","params":[{"name":"argument","optional":false,"type":[[["CommandArgument"," | "],["Argument"]]]}],"returns":[[["Record","<"],["string",", "],["any",">"]]],"meta":{"line":57,"file":"Argument.ts","path":"src/lib/structures"}},{"name":"validate","scope":"static","params":[{"name":"argument","optional":false,"type":[[["CommandArgument"," | "],["Argument"]]]},{"name":"command","optional":false,"type":[[["Command"]]]}],"returns":[[["boolean"," | "],["void"]]],"meta":{"line":71,"file":"Argument.ts","path":"src/lib/structures"}}],"meta":{"line":41,"file":"Argument.ts","path":"src/lib/structures"}},{"name":"AutocompleteContext","extends":["Context<Cached>"],"construct":{"name":"constructor","params":[{"name":"client","optional":false,"type":[[["GClient","<"],["boolean",">"]]]},{"name":"options","optional":false,"type":[[["AutocompleteContextOptions","<"],["Cached",">"]]]}],"returns":[[["AutocompleteContext","<"],["Cached",">"]]],"meta":{"line":24,"file":"AutocompleteContext.ts","path":"src/lib/structures/contexts"}},"props":[{"name":"argument","readonly":true,"type":[[["CommandArgument"," | "],["Argument"]]],"meta":{"line":19,"file":"AutocompleteContext.ts","path":"src/lib/structures/contexts"}},{"name":"argumentName","readonly":true,"type":[[["string"]]],"meta":{"line":20,"file":"AutocompleteContext.ts","path":"src/lib/structures/contexts"}},{"name":"channel","readonly":true,"type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["TextBasedChannel",">"]]],"meta":{"line":35,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"channelId","type":[[["string"]]],"meta":{"line":40,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"client","readonly":true,"type":[[["GClient","<"],["boolean",">"]]],"meta":{"line":34,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"command","readonly":true,"type":[[["Command"]]],"meta":{"line":17,"file":"AutocompleteContext.ts","path":"src/lib/structures/contexts"}},{"name":"commandName","readonly":true,"type":[[["string"]]],"meta":{"line":18,"file":"AutocompleteContext.ts","path":"src/lib/structures/contexts"}},{"name":"createdAt","readonly":true,"type":[[["Date"]]],"meta":{"line":41,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"createdTimestamp","readonly":true,"type":[[["number"]]],"meta":{"line":42,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"guild","readonly":true,"type":[[["CacheTypeReducer","<"],["Cached",", "],["Guild",", "],["null",", "],["Guild",", "],["Guild",">"]]],"meta":{"line":43,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"guildId","type":[[["CacheTypeReducer","<"],["Cached",", "],["string",", "],["string",", "],["string",", "],["string",">"]]],"meta":{"line":44,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"interaction","type":[[["AutocompleteInteraction","<"],["CacheType",">"]]],"meta":{"line":16,"file":"AutocompleteContext.ts","path":"src/lib/structures/contexts"}},{"name":"member","type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildMember",", "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",">"]]],"meta":{"line":45,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"memberPermissions","type":[[["CacheTypeReducer","<"],["Cached",", "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">>"]]],"meta":{"line":48,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"respond","type":[[["("],["choices",": "],["Array","<"],["CommandArgumentChoice",">) => "],["Promise","<"],["void",">"]]],"meta":{"line":22,"file":"AutocompleteContext.ts","path":"src/lib/structures/contexts"}},{"name":"type","type":[[["'BUTTON'"," | "],["'SELECT","_"],["MENU'"," | "],["'COMMAND'"," | "],["'AUTOCOMPLETE'"]]],"meta":{"line":49,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"user","type":[[["User"]]],"meta":{"line":46,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"userId","type":[[["string"]]],"meta":{"line":47,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"value","readonly":true,"type":[[["string"," | "],["number"]]],"meta":{"line":21,"file":"AutocompleteContext.ts","path":"src/lib/structures/contexts"}}],"methods":[{"name":"inCachedGuild","returns":[[["this"," "],["is"," "],["AutocompleteContext","<"],["'cached'",">"]]],"meta":{"line":40,"file":"AutocompleteContext.ts","path":"src/lib/structures/contexts"}},{"name":"inGuild","returns":[[["this"," "],["is"," "],["AutocompleteContext","<"],["'present'",">"]]],"meta":{"line":36,"file":"AutocompleteContext.ts","path":"src/lib/structures/contexts"}},{"name":"inRawGuild","returns":[[["this"," "],["is"," "],["AutocompleteContext","<"],["'raw'",">"]]],"meta":{"line":44,"file":"AutocompleteContext.ts","path":"src/lib/structures/contexts"}},{"name":"isAutocomplete","returns":[[["this"," "],["is"," "],["AutocompleteContext","<"],["CacheType",">"]]],"meta":{"line":81,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isButton","returns":[[["this"," "],["is"," "],["ComponentContext","<"],["CacheType",">"]]],"meta":{"line":89,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isCommand","returns":[[["this"," "],["is"," "],["CommandContext","<"],["CacheType",">"]]],"meta":{"line":77,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isComponent","returns":[[["this"," "],["is"," "],["ComponentContext","<"],["CacheType",">"]]],"meta":{"line":85,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isSelectMenu","returns":[[["this"," "],["is"," "],["ComponentContext","<"],["CacheType",">"]]],"meta":{"line":93,"file":"Context.ts","path":"src/lib/structures/contexts"}}],"meta":{"line":15,"file":"AutocompleteContext.ts","path":"src/lib/structures/contexts"}},{"name":"Command","construct":{"name":"constructor","params":[{"name":"options","optional":false,"type":[[["CommandOptions"]]]}],"returns":[[["Command"]]],"meta":{"line":67,"file":"Command.ts","path":"src/lib/structures"}},"props":[{"name":"arguments","readonly":true,"type":[[["Array","<"],["CommandArgument"," | "],["Argument",">"]]],"meta":{"line":55,"file":"Command.ts","path":"src/lib/structures"}},{"name":"autoDefer","readonly":true,"type":[[["AutoDeferType"," | "],["'EPHEMERAL'"," | "],["'NORMAL'"," | "],["'UPDATE'"]]],"meta":{"line":65,"file":"Command.ts","path":"src/lib/structures"}},{"name":"client","type":[[["GClient","<"],["boolean",">"]]],"meta":{"line":51,"file":"Command.ts","path":"src/lib/structures"}},{"name":"cooldown","readonly":true,"type":[[["string"]]],"meta":{"line":59,"file":"Command.ts","path":"src/lib/structures"}},{"name":"description","readonly":true,"type":[[["string"]]],"meta":{"line":53,"file":"Command.ts","path":"src/lib/structures"}},{"name":"fileName","readonly":true,"type":[[["string"]]],"meta":{"line":60,"file":"Command.ts","path":"src/lib/structures"}},{"name":"guildId","type":[[["string"]]],"meta":{"line":57,"file":"Command.ts","path":"src/lib/structures"}},{"name":"inhibitors","readonly":true,"default":"[]","type":[[["CommandInhibitors"]]],"meta":{"line":56,"file":"Command.ts","path":"src/lib/structures"}},{"name":"name","readonly":true,"type":[[["string"]]],"meta":{"line":52,"file":"Command.ts","path":"src/lib/structures"}},{"name":"onError","readonly":true,"type":[[["("],["ctx",": "],["CommandContext","<"],["CacheType",">, "],["error",": "],["any",") => "],["any"]]],"meta":{"line":62,"file":"Command.ts","path":"src/lib/structures"}},{"name":"owner","type":[[["string"]]],"meta":{"line":63,"file":"Command.ts","path":"src/lib/structures"}},{"name":"reloading","default":"false","type":[[["boolean"]]],"meta":{"line":64,"file":"Command.ts","path":"src/lib/structures"}},{"name":"run","readonly":true,"type":[[["("],["ctx",": "],["CommandContext","<"],["CacheType",">) => "],["any"]]],"meta":{"line":61,"file":"Command.ts","path":"src/lib/structures"}},{"name":"type","readonly":true,"type":[[["Array","<"],["'MESSAGE'"," | "],["CommandType"," | "],["'SLASH'"," | "],["'CONTEXT","_"],["USER'"," | "],["'CONTEXT","_"],["MESSAGE'",">"]]],"meta":{"line":54,"file":"Command.ts","path":"src/lib/structures"}},{"name":"defaults","scope":"static","access":"private","type":[[["Partial","<"],["CommandOptions",">"]]],"meta":{"line":58,"file":"Command.ts","path":"src/lib/structures"}}],"methods":[{"name":"inhibit","params":[{"name":"ctx","optional":false,"type":[[["CommandContext","<"],["CacheType",">"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":87,"file":"Command.ts","path":"src/lib/structures"}},{"name":"initialize","params":[{"name":"client","optional":false,"type":[[["GClient","<"],["boolean",">"]]]}],"returns":[[["void"]]],"meta":{"line":77,"file":"Command.ts","path":"src/lib/structures"}},{"name":"reload","returns":[[["Promise","<"],["Command",">"]]],"meta":{"line":106,"file":"Command.ts","path":"src/lib/structures"}},{"name":"toAPICommand","returns":[[["Array","<"],["Record","<"],["string",", "],["any",">>"]]],"meta":{"line":117,"file":"Command.ts","path":"src/lib/structures"}},{"name":"unregister","returns":[[["Command"]]],"meta":{"line":83,"file":"Command.ts","path":"src/lib/structures"}},{"name":"validate","access":"private","returns":[[["boolean"," | "],["void"]]],"meta":{"line":135,"file":"Command.ts","path":"src/lib/structures"}},{"name":"setDefaults","scope":"static","params":[{"name":"defaults","optional":false,"type":[[["Partial","<"],["CommandOptions",">"]]]}],"returns":[[["void"]]],"meta":{"line":131,"file":"Command.ts","path":"src/lib/structures"}}],"meta":{"line":50,"file":"Command.ts","path":"src/lib/structures"}},{"name":"CommandContext","extends":["Context<Cached>"],"construct":{"name":"constructor","params":[{"name":"client","optional":false,"type":[[["GClient","<"],["boolean",">"]]]},{"name":"options","optional":false,"type":[[["CommandContextOptions","<"],["Cached",">"]]]}],"returns":[[["CommandContext","<"],["Cached",">"]]],"meta":{"line":44,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}},"props":[{"name":"arguments","type":[[["CommandInteractionOptionResolver","<"],["Cached",">"]]],"meta":{"line":34,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}},{"name":"channel","readonly":true,"type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["TextBasedChannel",">"]]],"meta":{"line":35,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"channelId","type":[[["string"]]],"meta":{"line":40,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"client","readonly":true,"type":[[["GClient","<"],["boolean",">"]]],"meta":{"line":34,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"command","readonly":true,"type":[[["Command"]]],"meta":{"line":32,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}},{"name":"commandName","readonly":true,"type":[[["string"]]],"meta":{"line":33,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}},{"name":"createdAt","readonly":true,"type":[[["Date"]]],"meta":{"line":41,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"createdTimestamp","readonly":true,"type":[[["number"]]],"meta":{"line":42,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"deferReply","type":[[["("],["options",": "],["InteractionDeferReplyOptions"," & {"],["\nfetchReply",": "],["Fetch\n","}) => "],["Promise","<"],["Fetch"," "],["extends"," "],["true"," ? "],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">> : "],["void",">"]]],"meta":{"line":37,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}},{"name":"deferred","default":"false","type":[[["boolean"]]],"meta":{"line":35,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}},{"name":"deleteReply","type":[[["(..."],["args",": "],["unknown","[]) => "],["Promise","<"],["void",">"]]],"meta":{"line":38,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}},{"name":"editReply","type":[[["("],["options",": "],["string"," | "],["MessagePayload"," | "],["WebhookEditMessageOptions",") => "],["Promise","<"],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">>>"]]],"meta":{"line":39,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}},{"name":"fetchReply","type":[[["(..."],["args",": "],["unknown","[]) => "],["Promise","<"],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">>>"]]],"meta":{"line":40,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}},{"name":"followUp","type":[[["("],["options",": "],["string"," | "],["MessagePayload"," | "],["InteractionReplyOptions",") => "],["Promise","<"],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">>>"]]],"meta":{"line":41,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}},{"name":"guild","readonly":true,"type":[[["CacheTypeReducer","<"],["Cached",", "],["Guild",", "],["null",", "],["Guild",", "],["Guild",">"]]],"meta":{"line":43,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"guildId","type":[[["CacheTypeReducer","<"],["Cached",", "],["string",", "],["string",", "],["string",", "],["string",">"]]],"meta":{"line":44,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"interaction","type":[[["CommandInteraction","<"],["CacheType","> | "],["ContextMenuInteraction","<"],["CacheType",">"]]],"meta":{"line":30,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}},{"name":"member","type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildMember",", "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",">"]]],"meta":{"line":45,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"memberPermissions","type":[[["CacheTypeReducer","<"],["Cached",", "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">>"]]],"meta":{"line":48,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"message","type":[[["Message","<"],["boolean",">"]]],"meta":{"line":31,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}},{"name":"replied","default":"false","type":[[["boolean"]]],"meta":{"line":36,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}},{"name":"reply","type":[[["("],["options",": "],["string"," | "],["MessagePayload"," | "],["InteractionReplyOptions"," | "],["InteractionReplyOptions"," & {"],["\nfetchReply",": "],["Fetch\n","}) => "],["Promise","<"],["Fetch"," "],["extends"," "],["true"," ? "],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">> : "],["void",">"]]],"meta":{"line":42,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}},{"name":"type","type":[[["'BUTTON'"," | "],["'SELECT","_"],["MENU'"," | "],["'COMMAND'"," | "],["'AUTOCOMPLETE'"]]],"meta":{"line":49,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"user","type":[[["User"]]],"meta":{"line":46,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"userId","type":[[["string"]]],"meta":{"line":47,"file":"Context.ts","path":"src/lib/structures/contexts"}}],"methods":[{"name":"inCachedGuild","returns":[[["this"," "],["is"," "],["Context","<"],["'cached'",">"]]],"meta":{"line":69,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"inGuild","returns":[[["this"," "],["is"," "],["Context","<"],["'present'",">"]]],"meta":{"line":65,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"inRawGuild","returns":[[["this"," "],["is"," "],["Context","<"],["'raw'",">"]]],"meta":{"line":73,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isAutocomplete","returns":[[["this"," "],["is"," "],["AutocompleteContext","<"],["CacheType",">"]]],"meta":{"line":81,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isButton","returns":[[["this"," "],["is"," "],["ComponentContext","<"],["CacheType",">"]]],"meta":{"line":89,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isCommand","returns":[[["this"," "],["is"," "],["CommandContext","<"],["CacheType",">"]]],"meta":{"line":77,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isComponent","returns":[[["this"," "],["is"," "],["ComponentContext","<"],["CacheType",">"]]],"meta":{"line":85,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isSelectMenu","returns":[[["this"," "],["is"," "],["ComponentContext","<"],["CacheType",">"]]],"meta":{"line":93,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"safeReply","params":[{"name":"options","optional":true,"type":[[["string"," | "],["MessagePayload"," | "],["InteractionReplyOptions"," | "],["InteractionReplyOptions"," & {"],["\nfetchReply",": "],["Fetch\n","}"]]]}],"returns":[[["Promise","<"],["Fetch"," "],["extends"," "],["true"," ? "],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">> : "],["void",">"]]],"meta":{"line":68,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}}],"meta":{"line":29,"file":"CommandContext.ts","path":"src/lib/structures/contexts"}},{"name":"CommandManager","extends":["Collection<string, Command>"],"construct":{"name":"constructor","params":[{"name":"entries","optional":true,"type":[[["readonly"," "],["Array","<"],["readonly"," ["],["string",", "],["Command","]>"]]]}],"returns":[[["CommandManager"]]]},"props":[{"name":"[toStringTag]","readonly":true,"type":[[["string"]]],"meta":{"line":135,"file":"lib.es2015.symbol.wellknown.d.ts","path":"node_modules/typescript/lib"}},{"name":"client","access":"private","type":[[["GClient","<"],["boolean",">"]]],"meta":{"line":8,"file":"CommandManager.ts","path":"src/lib/managers"}},{"name":"constructor","type":[[["CollectionConstructor"]]],"meta":{"line":17,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"size","readonly":true,"type":[[["number"]]],"meta":{"line":28,"file":"lib.es2015.collection.d.ts","path":"node_modules/typescript/lib"}},{"name":"[species]","scope":"static","readonly":true,"type":[[["MapConstructor"]]],"meta":{"line":317,"file":"lib.es2015.symbol.wellknown.d.ts","path":"node_modules/typescript/lib"}},{"name":"default","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["Collection",")"]]],"meta":{"line":24,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}}],"methods":[{"name":"[iterator]","description":"Returns an iterable of entries in the map.","returns":[[["IterableIterator","<["],["string",", "],["Command","]>"]]]},{"name":"at","description":"Identical to [Array.at()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at).\nReturns the item at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.","params":[{"name":"index","description":"The index of the element to obtain","optional":false,"type":[[["number"]]]}],"returns":[[["Command"]]],"meta":{"line":97,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"clear","returns":[[["void"]]]},{"name":"clone","description":"Creates an identical shallow copy of this collection.","see":[],"examples":["const newColl = someColl.clone();"],"abstract":false,"deprecated":false,"emits":[],"returns":[[["Collection","<"],["string",", "],["Command",">"]]],"meta":{"line":316,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"concat","description":"Combines this collection with others into a new collection. None of the source collections are modified.","see":[],"examples":["const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"collections","description":"Collections to merge","optional":false,"type":[[["Array","<"],["Collection","<"],["string",", "],["Command",">>"]]]}],"returns":[[["Collection","<"],["string",", "],["Command",">"]]],"meta":{"line":325,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"delete","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[[["boolean"]]]},{"name":"difference","description":"The difference method returns a new structure containing items where the key is present in one of the original structures but not the other.","params":[{"name":"other","description":"The other Collection to filter against","optional":false,"type":[[["Collection","<"],["string",", "],["Command",">"]]]}],"returns":[[["Collection","<"],["string",", "],["Command",">"]]],"meta":{"line":359,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"each","description":"Identical to\n[Map.forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach),\nbut returns the collection instead of undefined.","see":[],"examples":["collection\n .each(user => console.log(user.username))\n .filter(user => user.bot)\n .each(user => console.log(user.username));"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function to execute for each element","optional":false,"type":[[["("],["value",": "],["Command",", "],["key",": "],["string",", "],["collection",": "],["CommandManager",") => "],["void"]]]}],"returns":[[["CommandManager"]]],"meta":{"line":294,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"ensure","description":"Obtains the value of the given key if it exists, otherwise sets and returns the value provided by the default value generator.","see":[],"examples":["collection.ensure(guildId, () => defaultGuildConfig);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"key","description":"The key to get if it exists, or set otherwise","optional":false,"type":[[["string"]]]},{"name":"defaultValueGenerator","description":"A function that generates the default value","optional":false,"type":[[["("],["key",": "],["string",", "],["collection",": "],["CommandManager",") => "],["Command"]]]}],"returns":[[["Command"]]],"meta":{"line":34,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"entries","description":"Returns an iterable of key, value pairs for every entry in the map.","returns":[[["IterableIterator","<["],["string",", "],["Command","]>"]]]},{"name":"equals","description":"Checks if this collection shares identical items with another.\nThis is different to checking for equality using equal-signs, because\nthe collections may be different objects, but contain the same data.","params":[{"name":"collection","description":"Collection to compare with","optional":false,"type":[[["Collection","<"],["string",", "],["Command",">"]]]}],"returns":[[["boolean"]]],"returnsDescription":"Whether the collections have identical contents","meta":{"line":335,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"every","description":"Checks if all items passes a test. Identical in behavior to\n[Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).","see":[],"examples":["collection.every(user => !user.bot);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Command",", "],["key",": "],["string",", "],["collection",": "],["CommandManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["this"," "],["is"," "],["Collection","<"],["K2",", "],["Command",">"]]],"meta":{"line":262,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"filter","description":"Identical to\n[Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\nbut returns a Collection instead of an Array.","see":[],"examples":["collection.filter(user => user.username === 'Bob');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"The function to test with (should return boolean)","optional":false,"type":[[["("],["value",": "],["Command",", "],["key",": "],["string",", "],["collection",": "],["CommandManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["Collection","<"],["K2",", "],["Command",">"]]],"meta":{"line":182,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"find","description":"Searches for a single item where the given function returns a truthy value. This behaves like\n[Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\n<warn>All collections used in Discord.js are mapped using their `id` property, and if you want to find by id you\nshould use the `get` method. See\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>","see":[],"examples":["collection.find(user => user.username === 'Bob');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"The function to test with (should return boolean)","optional":false,"type":[[["("],["value",": "],["Command",", "],["key",": "],["string",", "],["collection",": "],["CommandManager",") => "],["value"," "],["is"," "],["V2"]]]}],"returns":[[["V2"]]],"meta":{"line":142,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"findKey","description":"Searches for the key of a single item where the given function returns a truthy value. This behaves like\n[Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex),\nbut returns the key rather than the positional index.","see":[],"examples":["collection.findKey(user => user.username === 'Bob');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"The function to test with (should return boolean)","optional":false,"type":[[["("],["value",": "],["Command",", "],["key",": "],["string",", "],["collection",": "],["CommandManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["K2"]]],"meta":{"line":157,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"first","description":"Obtains the first value(s) in this collection.","returns":[[["Command"]]],"returnsDescription":"A single value if no amount is provided or an array of values, starting from the end if amount is negative","meta":{"line":58,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"firstKey","description":"Obtains the first key(s) in this collection.","returns":[[["string"]]],"returnsDescription":"A single key if no amount is provided or an array of keys, starting from the end if\namount is negative","meta":{"line":68,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"flatMap","description":"Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to\n[Array.flatMap()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap).","see":[],"examples":["collection.flatMap(guild => guild.members.cache);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function that produces a new Collection","optional":false,"type":[[["("],["value",": "],["Command",", "],["key",": "],["string",", "],["collection",": "],["CommandManager",") => "],["Collection","<"],["string",", "],["T",">"]]]}],"returns":[[["Collection","<"],["string",", "],["T",">"]]],"meta":{"line":214,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"forEach","params":[{"name":"callbackfn","optional":false,"type":[[["("],["value",": "],["Command",", "],["key",": "],["string",", "],["map",": "],["Map","<"],["string",", "],["Command",">) => "],["void"]]]},{"name":"thisArg","optional":true,"type":[[["any"]]]}],"returns":[[["void"]]]},{"name":"get","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[[["Command"]]]},{"name":"has","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[[["boolean"]]]},{"name":"hasAll","description":"Checks if all of the elements exist in the collection.","params":[{"name":"keys","description":"The keys of the elements to check for","optional":false,"type":[[["Array","<"],["string",">"]]]}],"returns":[[["boolean"]]],"returnsDescription":"`true` if all of the elements exist, `false` if at least one does not exist.","meta":{"line":42,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"hasAny","description":"Checks if any of the elements exist in the collection.","params":[{"name":"keys","description":"The keys of the elements to check for","optional":false,"type":[[["Array","<"],["string",">"]]]}],"returns":[[["boolean"]]],"returnsDescription":"`true` if any of the elements exist, `false` if none exist.","meta":{"line":50,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"initiate","params":[{"name":"client","optional":false,"type":[[["GClient","<"],["boolean",">"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":32,"file":"CommandManager.ts","path":"src/lib/managers"}},{"name":"intersect","description":"The intersect method returns a new structure containing items where the keys are present in both original structures.","params":[{"name":"other","description":"The other Collection to filter against","optional":false,"type":[[["Collection","<"],["string",", "],["Command",">"]]]}],"returns":[[["Collection","<"],["string",", "],["Command",">"]]],"meta":{"line":353,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"keyAt","description":"Identical to [Array.at()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at).\nReturns the key at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.","params":[{"name":"index","description":"The index of the key to obtain","optional":false,"type":[[["number"]]]}],"returns":[[["string"]]],"meta":{"line":105,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"keys","description":"Returns an iterable of keys in the map","returns":[[["IterableIterator","<"],["string",">"]]]},{"name":"last","description":"Obtains the last value(s) in this collection.","returns":[[["Command"]]],"returnsDescription":"A single value if no amount is provided or an array of values, starting from the start if\namount is negative","meta":{"line":78,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"lastKey","description":"Obtains the last key(s) in this collection.","returns":[[["string"]]],"returnsDescription":"A single key if no amount is provided or an array of keys, starting from the start if\namount is negative","meta":{"line":88,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"map","description":"Maps each item to another value into an array. Identical in behavior to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","see":[],"examples":["collection.map(user => user.tag);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function that produces an element of the new array, taking three arguments","optional":false,"type":[[["("],["value",": "],["Command",", "],["key",": "],["string",", "],["collection",": "],["CommandManager",") => "],["T"]]]}],"returns":[[["Array","<"],["T",">"]]],"meta":{"line":226,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"mapValues","description":"Maps each item to another value into a collection. Identical in behavior to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","see":[],"examples":["collection.mapValues(user => user.tag);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function that produces an element of the new collection, taking three arguments","optional":false,"type":[[["("],["value",": "],["Command",", "],["key",": "],["string",", "],["collection",": "],["CommandManager",") => "],["T"]]]}],"returns":[[["Collection","<"],["string",", "],["T",">"]]],"meta":{"line":238,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"partition","description":"Partitions the collection into two collections where the first collection\ncontains the items that passed and the second contains the items that failed.","see":[],"examples":["const [big, small] = collection.partition(guild => guild.memberCount > 250);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Command",", "],["key",": "],["string",", "],["collection",": "],["CommandManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["["],["Collection","<"],["K2",", "],["Command",">, "],["Collection","<"],["Exclude","<"],["string",", "],["K2",">, "],["Command",">]"]]],"meta":{"line":198,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"random","description":"Obtains unique random value(s) from this collection.","returns":[[["Command"]]],"returnsDescription":"A single value if no amount is provided or an array of values","meta":{"line":113,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"randomKey","description":"Obtains unique random key(s) from this collection.","returns":[[["string"]]],"returnsDescription":"A single key if no amount is provided or an array","meta":{"line":122,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"reduce","description":"Applies a function to produce a single value. Identical in behavior to\n[Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).","see":[],"examples":["collection.reduce((acc, guild) => acc + guild.memberCount, 0);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\nand `collection`","optional":false,"type":[[["("],["accumulator",": "],["T",", "],["value",": "],["Command",", "],["key",": "],["string",", "],["collection",": "],["CommandManager",") => "],["T"]]]},{"name":"initialValue","description":"Starting value for the accumulator","optional":true,"type":[[["T"]]]}],"returns":[[["T"]]],"meta":{"line":279,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"register","params":[{"name":"command","optional":false,"type":[[["any"]]]}],"returns":[[["CommandManager"]]],"meta":{"line":10,"file":"CommandManager.ts","path":"src/lib/managers"}},{"name":"reverse","description":"Identical to [Array.reverse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse)\nbut returns a Collection instead of an Array.","returns":[[["CommandManager"]]],"meta":{"line":128,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"set","params":[{"name":"key","optional":false,"type":[[["string"]]]},{"name":"value","optional":false,"type":[[["Command"]]]}],"returns":[[["CommandManager"]]]},{"name":"some","description":"Checks if there exists an item that passes a test. Identical in behavior to\n[Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).","see":[],"examples":["collection.some(user => user.discriminator === '0000');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Command",", "],["key",": "],["string",", "],["collection",": "],["CommandManager",") => "],["boolean"]]]}],"returns":[[["boolean"]]],"meta":{"line":250,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"sort","description":"The sort method sorts the items of a collection in place and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.","see":[],"examples":["collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"compareFunction","description":"Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.","optional":true,"type":[[["Comparator","<"],["string",", "],["Command",">"]]]}],"returns":[[["CommandManager"]]],"meta":{"line":347,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"sorted","description":"The sorted method sorts the items of a collection and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.","see":[],"examples":["collection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"compareFunction","description":"Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value,\naccording to the string conversion of each element.","optional":true,"type":[[["Comparator","<"],["string",", "],["Command",">"]]]}],"returns":[[["Collection","<"],["string",", "],["Command",">"]]],"meta":{"line":372,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"sweep","description":"Removes items that satisfy the provided filter function.","params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Command",", "],["key",": "],["string",", "],["collection",": "],["CommandManager",") => "],["boolean"]]]}],"returns":[[["number"]]],"returnsDescription":"The number of removed entries","meta":{"line":169,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"tap","description":"Runs a function on the collection and returns the collection.","see":[],"examples":["collection\n .tap(coll => console.log(coll.size))\n .filter(user => user.bot)\n .tap(coll => console.log(coll.size))"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function to execute","optional":false,"type":[[["("],["collection",": "],["CommandManager",") => "],["void"]]]}],"returns":[[["CommandManager"]]],"meta":{"line":308,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"toJSON","returns":[[["Array","<"],["Command",">"]]],"meta":{"line":373,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"unregister","params":[{"name":"commandName","optional":false,"type":[[["string"]]]}],"returns":[[["Command"]]],"meta":{"line":22,"file":"CommandManager.ts","path":"src/lib/managers"}},{"name":"values","description":"Returns an iterable of values in the map","returns":[[["IterableIterator","<"],["Command",">"]]]}],"meta":{"line":7,"file":"CommandManager.ts","path":"src/lib/managers"}},{"name":"Component","construct":{"name":"constructor","params":[{"name":"options","optional":false,"type":[[["ComponentOptions"]]]}],"returns":[[["Component"]]],"meta":{"line":42,"file":"Component.ts","path":"src/lib/structures"}},"props":[{"name":"autoDefer","readonly":true,"type":[[["AutoDeferType"," | "],["'EPHEMERAL'"," | "],["'NORMAL'"," | "],["'UPDATE'"]]],"meta":{"line":40,"file":"Component.ts","path":"src/lib/structures"}},{"name":"client","type":[[["GClient","<"],["boolean",">"]]],"meta":{"line":28,"file":"Component.ts","path":"src/lib/structures"}},{"name":"cooldown","readonly":true,"type":[[["string"]]],"meta":{"line":34,"file":"Component.ts","path":"src/lib/structures"}},{"name":"fileName","readonly":true,"type":[[["string"]]],"meta":{"line":35,"file":"Component.ts","path":"src/lib/structures"}},{"name":"guildId","type":[[["string"]]],"meta":{"line":32,"file":"Component.ts","path":"src/lib/structures"}},{"name":"inhibitors","readonly":true,"default":"[]","type":[[["ComponentInhibitors"]]],"meta":{"line":31,"file":"Component.ts","path":"src/lib/structures"}},{"name":"name","readonly":true,"type":[[["string"]]],"meta":{"line":29,"file":"Component.ts","path":"src/lib/structures"}},{"name":"onError","readonly":true,"type":[[["("],["ctx",": "],["ComponentContext","<"],["CacheType",">, "],["error",": "],["any",") => "],["any"]]],"meta":{"line":37,"file":"Component.ts","path":"src/lib/structures"}},{"name":"owner","type":[[["string"]]],"meta":{"line":38,"file":"Component.ts","path":"src/lib/structures"}},{"name":"reloading","default":"false","type":[[["boolean"]]],"meta":{"line":39,"file":"Component.ts","path":"src/lib/structures"}},{"name":"run","readonly":true,"type":[[["("],["ctx",": "],["ComponentContext","<"],["CacheType",">) => "],["any"]]],"meta":{"line":36,"file":"Component.ts","path":"src/lib/structures"}},{"name":"type","readonly":true,"type":[[["Array","<"],["'BUTTON'"," | "],["'SELECT","_"],["MENU'"," | "],["ComponentType",">"]]],"meta":{"line":30,"file":"Component.ts","path":"src/lib/structures"}},{"name":"defaults","scope":"static","access":"private","type":[[["Partial","<"],["ComponentOptions",">"]]],"meta":{"line":33,"file":"Component.ts","path":"src/lib/structures"}}],"methods":[{"name":"inhibit","params":[{"name":"ctx","optional":false,"type":[[["ComponentContext","<"],["CacheType",">"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":62,"file":"Component.ts","path":"src/lib/structures"}},{"name":"initialize","params":[{"name":"client","optional":false,"type":[[["GClient","<"],["boolean",">"]]]}],"returns":[[["void"]]],"meta":{"line":52,"file":"Component.ts","path":"src/lib/structures"}},{"name":"reload","returns":[[["Promise","<"],["Component",">"]]],"meta":{"line":81,"file":"Component.ts","path":"src/lib/structures"}},{"name":"unregister","returns":[[["void"]]],"meta":{"line":58,"file":"Component.ts","path":"src/lib/structures"}},{"name":"validate","access":"private","returns":[[["boolean"," | "],["void"]]],"meta":{"line":96,"file":"Component.ts","path":"src/lib/structures"}},{"name":"setDefaults","scope":"static","params":[{"name":"defaults","optional":false,"type":[[["Partial","<"],["ComponentOptions",">"]]]}],"returns":[[["void"]]],"meta":{"line":92,"file":"Component.ts","path":"src/lib/structures"}}],"meta":{"line":27,"file":"Component.ts","path":"src/lib/structures"}},{"name":"ComponentContext","extends":["Context<Cached>"],"construct":{"name":"constructor","params":[{"name":"client","optional":false,"type":[[["GClient","<"],["boolean",">"]]]},{"name":"options","optional":false,"type":[[["ComponentContextOptions","<"],["Cached",">"]]]}],"returns":[[["ComponentContext","<"],["Cached",">"]]],"meta":{"line":48,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},"props":[{"name":"arguments","type":[[["Array","<"],["string",">"]]],"meta":{"line":36,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},{"name":"channel","readonly":true,"type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["TextBasedChannel",">"]]],"meta":{"line":35,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"channelId","type":[[["string"]]],"meta":{"line":40,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"client","readonly":true,"type":[[["GClient","<"],["boolean",">"]]],"meta":{"line":34,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"component","readonly":true,"type":[[["Component"]]],"meta":{"line":33,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},{"name":"componentName","readonly":true,"type":[[["string"]]],"meta":{"line":34,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},{"name":"createdAt","readonly":true,"type":[[["Date"]]],"meta":{"line":41,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"createdTimestamp","readonly":true,"type":[[["number"]]],"meta":{"line":42,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"customId","readonly":true,"type":[[["string"]]],"meta":{"line":35,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},{"name":"deferReply","type":[[["("],["options",": "],["InteractionDeferReplyOptions"," & {"],["\nfetchReply",": "],["Fetch\n","}) => "],["Promise","<"],["Fetch"," "],["extends"," "],["true"," ? "],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">> : "],["void",">"]]],"meta":{"line":40,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},{"name":"deferUpdate","type":[[["("],["options",": "],["InteractionDeferUpdateOptions"," & {"],["\nfetchReply",": "],["Fetch\n","}) => "],["Promise","<"],["Fetch"," "],["extends"," "],["true"," ? "],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">> : "],["void",">"]]],"meta":{"line":41,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},{"name":"deferred","default":"false","type":[[["boolean"]]],"meta":{"line":38,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},{"name":"deleteReply","type":[[["(..."],["args",": "],["unknown","[]) => "],["Promise","<"],["void",">"]]],"meta":{"line":42,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},{"name":"editReply","type":[[["("],["options",": "],["string"," | "],["MessagePayload"," | "],["WebhookEditMessageOptions",") => "],["Promise","<"],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">>>"]]],"meta":{"line":43,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},{"name":"fetchReply","type":[[["(..."],["args",": "],["unknown","[]) => "],["Promise","<"],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">>>"]]],"meta":{"line":44,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},{"name":"followUp","type":[[["("],["options",": "],["string"," | "],["MessagePayload"," | "],["InteractionReplyOptions",") => "],["Promise","<"],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">>>"]]],"meta":{"line":45,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},{"name":"guild","readonly":true,"type":[[["CacheTypeReducer","<"],["Cached",", "],["Guild",", "],["null",", "],["Guild",", "],["Guild",">"]]],"meta":{"line":43,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"guildId","type":[[["CacheTypeReducer","<"],["Cached",", "],["string",", "],["string",", "],["string",", "],["string",">"]]],"meta":{"line":44,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"interaction","type":[[["MessageComponentInteraction","<"],["CacheType",">"]]],"meta":{"line":32,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},{"name":"member","type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildMember",", "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",">"]]],"meta":{"line":45,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"memberPermissions","type":[[["CacheTypeReducer","<"],["Cached",", "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">>"]]],"meta":{"line":48,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"replied","default":"false","type":[[["boolean"]]],"meta":{"line":39,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},{"name":"reply","type":[[["("],["options",": "],["string"," | "],["MessagePayload"," | "],["InteractionReplyOptions"," | "],["InteractionReplyOptions"," & {"],["\nfetchReply",": "],["Fetch\n","}) => "],["Promise","<"],["Fetch"," "],["extends"," "],["true"," ? "],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">> : "],["void",">"]]],"meta":{"line":46,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},{"name":"type","type":[[["'BUTTON'"," | "],["'SELECT","_"],["MENU'"," | "],["'COMMAND'"," | "],["'AUTOCOMPLETE'"]]],"meta":{"line":49,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"user","type":[[["User"]]],"meta":{"line":46,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"userId","type":[[["string"]]],"meta":{"line":47,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"values","type":[[["Array","<"],["string",">"]]],"meta":{"line":37,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}}],"methods":[{"name":"inCachedGuild","returns":[[["this"," "],["is"," "],["Context","<"],["'cached'",">"]]],"meta":{"line":69,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"inGuild","returns":[[["this"," "],["is"," "],["Context","<"],["'present'",">"]]],"meta":{"line":65,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"inRawGuild","returns":[[["this"," "],["is"," "],["Context","<"],["'raw'",">"]]],"meta":{"line":73,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isAutocomplete","returns":[[["this"," "],["is"," "],["AutocompleteContext","<"],["CacheType",">"]]],"meta":{"line":81,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isButton","returns":[[["this"," "],["is"," "],["ComponentContext","<"],["CacheType",">"]]],"meta":{"line":89,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isCommand","returns":[[["this"," "],["is"," "],["CommandContext","<"],["CacheType",">"]]],"meta":{"line":77,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isComponent","returns":[[["this"," "],["is"," "],["ComponentContext","<"],["CacheType",">"]]],"meta":{"line":85,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isSelectMenu","returns":[[["this"," "],["is"," "],["ComponentContext","<"],["CacheType",">"]]],"meta":{"line":93,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"safeReply","params":[{"name":"options","optional":true,"type":[[["string"," | "],["MessagePayload"," | "],["InteractionReplyOptions"," | "],["InteractionReplyOptions"," & {"],["\nfetchReply",": "],["Fetch\n","}"]]]}],"returns":[[["Promise","<"],["Fetch"," "],["extends"," "],["true"," ? "],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">> : "],["void",">"]]],"meta":{"line":78,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}}],"meta":{"line":31,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"}},{"name":"ComponentManager","extends":["Collection<string, Component>"],"construct":{"name":"constructor","params":[{"name":"entries","optional":true,"type":[[["readonly"," "],["Array","<"],["readonly"," ["],["string",", "],["Component","]>"]]]}],"returns":[[["ComponentManager"]]]},"props":[{"name":"[toStringTag]","readonly":true,"type":[[["string"]]],"meta":{"line":135,"file":"lib.es2015.symbol.wellknown.d.ts","path":"node_modules/typescript/lib"}},{"name":"client","access":"private","type":[[["GClient","<"],["boolean",">"]]],"meta":{"line":8,"file":"ComponentManager.ts","path":"src/lib/managers"}},{"name":"constructor","type":[[["CollectionConstructor"]]],"meta":{"line":17,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"size","readonly":true,"type":[[["number"]]],"meta":{"line":28,"file":"lib.es2015.collection.d.ts","path":"node_modules/typescript/lib"}},{"name":"[species]","scope":"static","readonly":true,"type":[[["MapConstructor"]]],"meta":{"line":317,"file":"lib.es2015.symbol.wellknown.d.ts","path":"node_modules/typescript/lib"}},{"name":"default","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["Collection",")"]]],"meta":{"line":24,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}}],"methods":[{"name":"[iterator]","description":"Returns an iterable of entries in the map.","returns":[[["IterableIterator","<["],["string",", "],["Component","]>"]]]},{"name":"at","description":"Identical to [Array.at()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at).\nReturns the item at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.","params":[{"name":"index","description":"The index of the element to obtain","optional":false,"type":[[["number"]]]}],"returns":[[["Component"]]],"meta":{"line":97,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"clear","returns":[[["void"]]]},{"name":"clone","description":"Creates an identical shallow copy of this collection.","see":[],"examples":["const newColl = someColl.clone();"],"abstract":false,"deprecated":false,"emits":[],"returns":[[["Collection","<"],["string",", "],["Component",">"]]],"meta":{"line":316,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"concat","description":"Combines this collection with others into a new collection. None of the source collections are modified.","see":[],"examples":["const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"collections","description":"Collections to merge","optional":false,"type":[[["Array","<"],["Collection","<"],["string",", "],["Component",">>"]]]}],"returns":[[["Collection","<"],["string",", "],["Component",">"]]],"meta":{"line":325,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"delete","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[[["boolean"]]]},{"name":"difference","description":"The difference method returns a new structure containing items where the key is present in one of the original structures but not the other.","params":[{"name":"other","description":"The other Collection to filter against","optional":false,"type":[[["Collection","<"],["string",", "],["Component",">"]]]}],"returns":[[["Collection","<"],["string",", "],["Component",">"]]],"meta":{"line":359,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"each","description":"Identical to\n[Map.forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach),\nbut returns the collection instead of undefined.","see":[],"examples":["collection\n .each(user => console.log(user.username))\n .filter(user => user.bot)\n .each(user => console.log(user.username));"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function to execute for each element","optional":false,"type":[[["("],["value",": "],["Component",", "],["key",": "],["string",", "],["collection",": "],["ComponentManager",") => "],["void"]]]}],"returns":[[["ComponentManager"]]],"meta":{"line":294,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"ensure","description":"Obtains the value of the given key if it exists, otherwise sets and returns the value provided by the default value generator.","see":[],"examples":["collection.ensure(guildId, () => defaultGuildConfig);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"key","description":"The key to get if it exists, or set otherwise","optional":false,"type":[[["string"]]]},{"name":"defaultValueGenerator","description":"A function that generates the default value","optional":false,"type":[[["("],["key",": "],["string",", "],["collection",": "],["ComponentManager",") => "],["Component"]]]}],"returns":[[["Component"]]],"meta":{"line":34,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"entries","description":"Returns an iterable of key, value pairs for every entry in the map.","returns":[[["IterableIterator","<["],["string",", "],["Component","]>"]]]},{"name":"equals","description":"Checks if this collection shares identical items with another.\nThis is different to checking for equality using equal-signs, because\nthe collections may be different objects, but contain the same data.","params":[{"name":"collection","description":"Collection to compare with","optional":false,"type":[[["Collection","<"],["string",", "],["Component",">"]]]}],"returns":[[["boolean"]]],"returnsDescription":"Whether the collections have identical contents","meta":{"line":335,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"every","description":"Checks if all items passes a test. Identical in behavior to\n[Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).","see":[],"examples":["collection.every(user => !user.bot);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Component",", "],["key",": "],["string",", "],["collection",": "],["ComponentManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["this"," "],["is"," "],["Collection","<"],["K2",", "],["Component",">"]]],"meta":{"line":262,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"filter","description":"Identical to\n[Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\nbut returns a Collection instead of an Array.","see":[],"examples":["collection.filter(user => user.username === 'Bob');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"The function to test with (should return boolean)","optional":false,"type":[[["("],["value",": "],["Component",", "],["key",": "],["string",", "],["collection",": "],["ComponentManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["Collection","<"],["K2",", "],["Component",">"]]],"meta":{"line":182,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"find","description":"Searches for a single item where the given function returns a truthy value. This behaves like\n[Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\n<warn>All collections used in Discord.js are mapped using their `id` property, and if you want to find by id you\nshould use the `get` method. See\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>","see":[],"examples":["collection.find(user => user.username === 'Bob');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"The function to test with (should return boolean)","optional":false,"type":[[["("],["value",": "],["Component",", "],["key",": "],["string",", "],["collection",": "],["ComponentManager",") => "],["value"," "],["is"," "],["V2"]]]}],"returns":[[["V2"]]],"meta":{"line":142,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"findKey","description":"Searches for the key of a single item where the given function returns a truthy value. This behaves like\n[Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex),\nbut returns the key rather than the positional index.","see":[],"examples":["collection.findKey(user => user.username === 'Bob');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"The function to test with (should return boolean)","optional":false,"type":[[["("],["value",": "],["Component",", "],["key",": "],["string",", "],["collection",": "],["ComponentManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["K2"]]],"meta":{"line":157,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"first","description":"Obtains the first value(s) in this collection.","returns":[[["Component"]]],"returnsDescription":"A single value if no amount is provided or an array of values, starting from the end if amount is negative","meta":{"line":58,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"firstKey","description":"Obtains the first key(s) in this collection.","returns":[[["string"]]],"returnsDescription":"A single key if no amount is provided or an array of keys, starting from the end if\namount is negative","meta":{"line":68,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"flatMap","description":"Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to\n[Array.flatMap()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap).","see":[],"examples":["collection.flatMap(guild => guild.members.cache);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function that produces a new Collection","optional":false,"type":[[["("],["value",": "],["Component",", "],["key",": "],["string",", "],["collection",": "],["ComponentManager",") => "],["Collection","<"],["string",", "],["T",">"]]]}],"returns":[[["Collection","<"],["string",", "],["T",">"]]],"meta":{"line":214,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"forEach","params":[{"name":"callbackfn","optional":false,"type":[[["("],["value",": "],["Component",", "],["key",": "],["string",", "],["map",": "],["Map","<"],["string",", "],["Component",">) => "],["void"]]]},{"name":"thisArg","optional":true,"type":[[["any"]]]}],"returns":[[["void"]]]},{"name":"get","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[[["Component"]]]},{"name":"has","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[[["boolean"]]]},{"name":"hasAll","description":"Checks if all of the elements exist in the collection.","params":[{"name":"keys","description":"The keys of the elements to check for","optional":false,"type":[[["Array","<"],["string",">"]]]}],"returns":[[["boolean"]]],"returnsDescription":"`true` if all of the elements exist, `false` if at least one does not exist.","meta":{"line":42,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"hasAny","description":"Checks if any of the elements exist in the collection.","params":[{"name":"keys","description":"The keys of the elements to check for","optional":false,"type":[[["Array","<"],["string",">"]]]}],"returns":[[["boolean"]]],"returnsDescription":"`true` if any of the elements exist, `false` if none exist.","meta":{"line":50,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"initiate","params":[{"name":"client","optional":false,"type":[[["GClient","<"],["boolean",">"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":32,"file":"ComponentManager.ts","path":"src/lib/managers"}},{"name":"intersect","description":"The intersect method returns a new structure containing items where the keys are present in both original structures.","params":[{"name":"other","description":"The other Collection to filter against","optional":false,"type":[[["Collection","<"],["string",", "],["Component",">"]]]}],"returns":[[["Collection","<"],["string",", "],["Component",">"]]],"meta":{"line":353,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"keyAt","description":"Identical to [Array.at()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at).\nReturns the key at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.","params":[{"name":"index","description":"The index of the key to obtain","optional":false,"type":[[["number"]]]}],"returns":[[["string"]]],"meta":{"line":105,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"keys","description":"Returns an iterable of keys in the map","returns":[[["IterableIterator","<"],["string",">"]]]},{"name":"last","description":"Obtains the last value(s) in this collection.","returns":[[["Component"]]],"returnsDescription":"A single value if no amount is provided or an array of values, starting from the start if\namount is negative","meta":{"line":78,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"lastKey","description":"Obtains the last key(s) in this collection.","returns":[[["string"]]],"returnsDescription":"A single key if no amount is provided or an array of keys, starting from the start if\namount is negative","meta":{"line":88,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"map","description":"Maps each item to another value into an array. Identical in behavior to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","see":[],"examples":["collection.map(user => user.tag);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function that produces an element of the new array, taking three arguments","optional":false,"type":[[["("],["value",": "],["Component",", "],["key",": "],["string",", "],["collection",": "],["ComponentManager",") => "],["T"]]]}],"returns":[[["Array","<"],["T",">"]]],"meta":{"line":226,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"mapValues","description":"Maps each item to another value into a collection. Identical in behavior to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","see":[],"examples":["collection.mapValues(user => user.tag);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function that produces an element of the new collection, taking three arguments","optional":false,"type":[[["("],["value",": "],["Component",", "],["key",": "],["string",", "],["collection",": "],["ComponentManager",") => "],["T"]]]}],"returns":[[["Collection","<"],["string",", "],["T",">"]]],"meta":{"line":238,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"partition","description":"Partitions the collection into two collections where the first collection\ncontains the items that passed and the second contains the items that failed.","see":[],"examples":["const [big, small] = collection.partition(guild => guild.memberCount > 250);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Component",", "],["key",": "],["string",", "],["collection",": "],["ComponentManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["["],["Collection","<"],["K2",", "],["Component",">, "],["Collection","<"],["Exclude","<"],["string",", "],["K2",">, "],["Component",">]"]]],"meta":{"line":198,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"random","description":"Obtains unique random value(s) from this collection.","returns":[[["Component"]]],"returnsDescription":"A single value if no amount is provided or an array of values","meta":{"line":113,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"randomKey","description":"Obtains unique random key(s) from this collection.","returns":[[["string"]]],"returnsDescription":"A single key if no amount is provided or an array","meta":{"line":122,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"reduce","description":"Applies a function to produce a single value. Identical in behavior to\n[Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).","see":[],"examples":["collection.reduce((acc, guild) => acc + guild.memberCount, 0);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\nand `collection`","optional":false,"type":[[["("],["accumulator",": "],["T",", "],["value",": "],["Component",", "],["key",": "],["string",", "],["collection",": "],["ComponentManager",") => "],["T"]]]},{"name":"initialValue","description":"Starting value for the accumulator","optional":true,"type":[[["T"]]]}],"returns":[[["T"]]],"meta":{"line":279,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"register","params":[{"name":"component","optional":false,"type":[[["Component"]]]}],"returns":[[["ComponentManager"]]],"meta":{"line":10,"file":"ComponentManager.ts","path":"src/lib/managers"}},{"name":"reverse","description":"Identical to [Array.reverse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse)\nbut returns a Collection instead of an Array.","returns":[[["ComponentManager"]]],"meta":{"line":128,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"set","params":[{"name":"key","optional":false,"type":[[["string"]]]},{"name":"value","optional":false,"type":[[["Component"]]]}],"returns":[[["ComponentManager"]]]},{"name":"some","description":"Checks if there exists an item that passes a test. Identical in behavior to\n[Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).","see":[],"examples":["collection.some(user => user.discriminator === '0000');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Component",", "],["key",": "],["string",", "],["collection",": "],["ComponentManager",") => "],["boolean"]]]}],"returns":[[["boolean"]]],"meta":{"line":250,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"sort","description":"The sort method sorts the items of a collection in place and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.","see":[],"examples":["collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"compareFunction","description":"Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.","optional":true,"type":[[["Comparator","<"],["string",", "],["Component",">"]]]}],"returns":[[["ComponentManager"]]],"meta":{"line":347,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"sorted","description":"The sorted method sorts the items of a collection and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.","see":[],"examples":["collection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"compareFunction","description":"Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value,\naccording to the string conversion of each element.","optional":true,"type":[[["Comparator","<"],["string",", "],["Component",">"]]]}],"returns":[[["Collection","<"],["string",", "],["Component",">"]]],"meta":{"line":372,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"sweep","description":"Removes items that satisfy the provided filter function.","params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Component",", "],["key",": "],["string",", "],["collection",": "],["ComponentManager",") => "],["boolean"]]]}],"returns":[[["number"]]],"returnsDescription":"The number of removed entries","meta":{"line":169,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"tap","description":"Runs a function on the collection and returns the collection.","see":[],"examples":["collection\n .tap(coll => console.log(coll.size))\n .filter(user => user.bot)\n .tap(coll => console.log(coll.size))"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function to execute","optional":false,"type":[[["("],["collection",": "],["ComponentManager",") => "],["void"]]]}],"returns":[[["ComponentManager"]]],"meta":{"line":308,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"toJSON","returns":[[["Array","<"],["Component",">"]]],"meta":{"line":373,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"unregister","params":[{"name":"componentName","optional":false,"type":[[["string"]]]}],"returns":[[["Component"]]],"meta":{"line":22,"file":"ComponentManager.ts","path":"src/lib/managers"}},{"name":"values","description":"Returns an iterable of values in the map","returns":[[["IterableIterator","<"],["Component",">"]]]}],"meta":{"line":7,"file":"ComponentManager.ts","path":"src/lib/managers"}},{"name":"Context","construct":{"name":"constructor","params":[{"name":"client","optional":false,"type":[[["GClient","<"],["boolean",">"]]]},{"name":"options","optional":false,"type":[[["ContextOptions","<"],["Cached",">"]]]}],"returns":[[["Context","<"],["Cached",">"]]],"meta":{"line":51,"file":"Context.ts","path":"src/lib/structures/contexts"}},"props":[{"name":"channel","readonly":true,"type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["TextBasedChannel",">"]]],"meta":{"line":35,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"channelId","type":[[["string"]]],"meta":{"line":40,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"client","readonly":true,"type":[[["GClient","<"],["boolean",">"]]],"meta":{"line":34,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"createdAt","readonly":true,"type":[[["Date"]]],"meta":{"line":41,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"createdTimestamp","readonly":true,"type":[[["number"]]],"meta":{"line":42,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"guild","readonly":true,"type":[[["CacheTypeReducer","<"],["Cached",", "],["Guild",", "],["null",", "],["Guild",", "],["Guild",">"]]],"meta":{"line":43,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"guildId","type":[[["CacheTypeReducer","<"],["Cached",", "],["string",", "],["string",", "],["string",", "],["string",">"]]],"meta":{"line":44,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"member","type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildMember",", "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",">"]]],"meta":{"line":45,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"memberPermissions","type":[[["CacheTypeReducer","<"],["Cached",", "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">>"]]],"meta":{"line":48,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"type","type":[[["'BUTTON'"," | "],["'SELECT","_"],["MENU'"," | "],["'COMMAND'"," | "],["'AUTOCOMPLETE'"]]],"meta":{"line":49,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"user","type":[[["User"]]],"meta":{"line":46,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"userId","type":[[["string"]]],"meta":{"line":47,"file":"Context.ts","path":"src/lib/structures/contexts"}}],"methods":[{"name":"inCachedGuild","returns":[[["this"," "],["is"," "],["Context","<"],["'cached'",">"]]],"meta":{"line":69,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"inGuild","returns":[[["this"," "],["is"," "],["Context","<"],["'present'",">"]]],"meta":{"line":65,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"inRawGuild","returns":[[["this"," "],["is"," "],["Context","<"],["'raw'",">"]]],"meta":{"line":73,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isAutocomplete","returns":[[["this"," "],["is"," "],["AutocompleteContext","<"],["CacheType",">"]]],"meta":{"line":81,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isButton","returns":[[["this"," "],["is"," "],["ComponentContext","<"],["CacheType",">"]]],"meta":{"line":89,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isCommand","returns":[[["this"," "],["is"," "],["CommandContext","<"],["CacheType",">"]]],"meta":{"line":77,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isComponent","returns":[[["this"," "],["is"," "],["ComponentContext","<"],["CacheType",">"]]],"meta":{"line":85,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"isSelectMenu","returns":[[["this"," "],["is"," "],["ComponentContext","<"],["CacheType",">"]]],"meta":{"line":93,"file":"Context.ts","path":"src/lib/structures/contexts"}}],"meta":{"line":33,"file":"Context.ts","path":"src/lib/structures/contexts"}},{"name":"GClient","extends":["Client<Ready>"],"construct":{"name":"constructor","params":[{"name":"options","optional":false,"type":[[["GClientOptions"]]]}],"returns":[[["GClient","<"],["Ready",">"]]],"meta":{"line":28,"file":"GClient.ts","path":"src/lib"}},"props":[{"name":"application","type":[[["If","<"],["Ready",", "],["ClientApplication",", "],["null",">"]]],"meta":{"line":544,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"channels","type":[[["ChannelManager"]]],"meta":{"line":545,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"emojis","readonly":true,"type":[[["BaseGuildEmojiManager"]]],"meta":{"line":546,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"guilds","type":[[["GuildManager"]]],"meta":{"line":547,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"options","type":[[["GClientOptions"]]],"meta":{"line":26,"file":"GClient.ts","path":"src/lib"}},{"name":"readyAt","type":[[["If","<"],["Ready",", "],["Date",", "],["null",">"]]],"meta":{"line":549,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"readyTimestamp","readonly":true,"type":[[["If","<"],["Ready",", "],["number",", "],["null",">"]]],"meta":{"line":550,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"responses","default":"Responses","type":[[["Record","<"],["string",", "],["string",">"]]],"meta":{"line":25,"file":"GClient.ts","path":"src/lib"}},{"name":"shard","type":[[["ShardClientUtil"]]],"meta":{"line":552,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"sweepers","type":[[["Sweepers"]]],"meta":{"line":551,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"token","type":[[["If","<"],["Ready",", "],["string",", "],["string",">"]]],"meta":{"line":553,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"uptime","type":[[["If","<"],["Ready",", "],["number",", "],["null",">"]]],"meta":{"line":554,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"user","type":[[["If","<"],["Ready",", "],["ClientUser",", "],["null",">"]]],"meta":{"line":555,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"users","type":[[["UserManager"]]],"meta":{"line":556,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"voice","type":[[["ClientVoiceManager"]]],"meta":{"line":557,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"ws","type":[[["WebSocketManager"]]],"meta":{"line":558,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"captureRejectionSymbol","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["captureRejectionSymbol",")"]]],"meta":{"line":273,"file":"events.d.ts","path":"node_modules/@types/node"}},{"name":"captureRejections","description":"Sets or gets the default captureRejection value for all emitters.","scope":"static","type":[[["boolean"]]],"meta":{"line":278,"file":"events.d.ts","path":"node_modules/@types/node"}},{"name":"defaultMaxListeners","scope":"static","type":[[["number"]]],"meta":{"line":279,"file":"events.d.ts","path":"node_modules/@types/node"}},{"name":"errorMonitor","description":"This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["errorMonitor",")"]]],"meta":{"line":272,"file":"events.d.ts","path":"node_modules/@types/node"}}],"methods":[{"name":"addListener","description":"Alias for `emitter.on(eventName, listener)`.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"eventName","optional":false,"type":[[["string"," | "],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[["GClient","<"],["Ready",">"]]]},{"name":"destroy","returns":[[["void"]]],"meta":{"line":559,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"emit","params":[{"name":"event","optional":false,"type":[[["K"]]]},{"name":"args","optional":false,"type":[[["ClientEvents","["],["K","]"]]]}],"returns":[[["boolean"]]],"meta":{"line":587,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"eventNames","description":"Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"returns":[[["Array","<"],["string"," | "],["symbol",">"]]]},{"name":"fetchGuildPreview","params":[{"name":"guild","optional":false,"type":[[["GuildResolvable"]]]}],"returns":[[["Promise","<"],["GuildPreview",">"]]],"meta":{"line":560,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"fetchGuildTemplate","params":[{"name":"template","optional":false,"type":[[["string"]]]}],"returns":[[["Promise","<"],["GuildTemplate",">"]]],"meta":{"line":562,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"fetchGuildWidget","params":[{"name":"guild","optional":false,"type":[[["GuildResolvable"]]]}],"returns":[[["Promise","<"],["Widget",">"]]],"meta":{"line":567,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"fetchInvite","params":[{"name":"invite","optional":false,"type":[[["string"]]]},{"name":"options","optional":true,"type":[[["ClientFetchInviteOptions"]]]}],"returns":[[["Promise","<"],["Invite",">"]]],"meta":{"line":561,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"fetchPremiumStickerPacks","returns":[[["Promise","<"],["Collection","<"],["string",", "],["StickerPack",">>"]]],"meta":{"line":565,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"fetchSticker","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[["Promise","<"],["Sticker",">"]]],"meta":{"line":564,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"fetchVoiceRegions","returns":[[["Promise","<"],["Collection","<"],["string",", "],["VoiceRegion",">>"]]],"meta":{"line":563,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"fetchWebhook","params":[{"name":"id","optional":false,"type":[[["string"]]]},{"name":"token","optional":true,"type":[[["string"]]]}],"returns":[[["Promise","<"],["Webhook",">"]]],"meta":{"line":566,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"generateInvite","params":[{"name":"options","optional":true,"type":[[["InviteGenerationOptions"]]]}],"returns":[[["string"]]],"meta":{"line":568,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"getDatabase","params":[{"name":"_","optional":true,"type":[[["Database"]]]}],"returns":[[["Database"]]],"meta":{"line":47,"file":"GClient.ts","path":"src/lib"}},{"name":"getMaxListeners","description":"Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"returns":[[["number"]]]},{"name":"isReady","returns":[[["this"," "],["is"," "],["Client","<"],["true",">"]]],"meta":{"line":570,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"listenerCount","description":"Returns the number of listeners listening to the event named `eventName`.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"eventName","description":"The name of the event being listened for","optional":false,"type":[[["string"," | "],["symbol"]]]}],"returns":[[["number"]]]},{"name":"listeners","description":"Returns a copy of the array of listeners for the event named `eventName`.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"eventName","optional":false,"type":[[["string"," | "],["symbol"]]]}],"returns":[[["Array","<"],["Function",">"]]]},{"name":"login","params":[{"name":"token","optional":true,"type":[[["string"]]]}],"returns":[[["Promise","<"],["string",">"]]],"meta":{"line":569,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"off","params":[{"name":"event","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["ClientEvents","["],["K","]) => "],["Awaitable","<"],["void",">"]]]}],"returns":[[["GClient","<"],["Ready",">"]]],"meta":{"line":590,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"on","params":[{"name":"event","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["ClientEvents","["],["K","]) => "],["Awaitable","<"],["void",">"]]]}],"returns":[[["GClient","<"],["Ready",">"]]],"meta":{"line":575,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"once","params":[{"name":"event","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["ClientEvents","["],["K","]) => "],["Awaitable","<"],["void",">"]]]}],"returns":[[["GClient","<"],["Ready",">"]]],"meta":{"line":581,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"prependListener","description":"Adds the `listener` function to the _beginning_ of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"eventName","description":"The name of the event.","optional":false,"type":[[["string"," | "],["symbol"]]]},{"name":"listener","description":"The callback function","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[["GClient","<"],["Ready",">"]]]},{"name":"prependOnceListener","description":"Adds a **one-time**`listener` function for the event named `eventName` to the_beginning_ of the listeners array. The next time `eventName` is triggered, this\nlistener is removed, and then invoked.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"eventName","description":"The name of the event.","optional":false,"type":[[["string"," | "],["symbol"]]]},{"name":"listener","description":"The callback function","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[["GClient","<"],["Ready",">"]]]},{"name":"rawListeners","description":"Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"eventName","optional":false,"type":[[["string"," | "],["symbol"]]]}],"returns":[[["Array","<"],["Function",">"]]]},{"name":"removeAllListeners","params":[{"name":"event","optional":true,"type":[[["K"]]]}],"returns":[[["GClient","<"],["Ready",">"]]],"meta":{"line":596,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"removeListener","description":"Removes the specified `listener` from the listener array for the event named`eventName`.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"eventName","optional":false,"type":[[["string"," | "],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[["GClient","<"],["Ready",">"]]]},{"name":"setMaxListeners","description":"By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"n","optional":false,"type":[[["number"]]]}],"returns":[[["GClient","<"],["Ready",">"]]]},{"name":"sweepMessages","see":[],"examples":[],"abstract":false,"deprecated":true,"emits":[],"params":[{"name":"lifetime","optional":true,"type":[[["number"]]]}],"returns":[[["number"]]],"meta":{"line":572,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"toJSON","returns":[[["unknown"]]],"meta":{"line":573,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"getEventListeners","description":"Returns a copy of the array of listeners for the event named `eventName`.","see":[],"scope":"static","examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"," | "],["DOMEventTarget"]]]},{"name":"name","optional":false,"type":[[["string"," | "],["symbol"]]]}],"returns":[[["Array","<"],["Function",">"]]],"meta":{"line":262,"file":"events.d.ts","path":"node_modules/@types/node"}},{"name":"listenerCount","description":"A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.","see":[],"scope":"static","examples":[],"abstract":false,"deprecated":true,"emits":[],"params":[{"name":"emitter","description":"The emitter to query","optional":false,"type":[[["EventEmitter"]]]},{"name":"eventName","description":"The event name","optional":false,"type":[[["string"," | "],["symbol"]]]}],"returns":[[["number"]]],"meta":{"line":234,"file":"events.d.ts","path":"node_modules/@types/node"}},{"name":"on","description":"```js\nconst { on, EventEmitter } = require('events');","see":[],"scope":"static","examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"]]]},{"name":"eventName","description":"The name of the event being listened for","optional":false,"type":[[["string"]]]},{"name":"options","optional":true,"type":[[["StaticEventEmitterOptions"]]]}],"returns":[[["AsyncIterableIterator","<"],["any",">"]]],"returnsDescription":"that iterates `eventName` events emitted by the `emitter`","meta":{"line":217,"file":"events.d.ts","path":"node_modules/@types/node"}},{"name":"once","description":"Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.","see":[],"scope":"static","examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"emitter","optional":false,"type":[[["NodeEventTarget"]]]},{"name":"eventName","optional":false,"type":[[["string"," | "],["symbol"]]]},{"name":"options","optional":true,"type":[[["StaticEventEmitterOptions"]]]}],"returns":[[["Promise","<"],["Array","<"],["any",">>"]]],"meta":{"line":157,"file":"events.d.ts","path":"node_modules/@types/node"}}],"meta":{"line":24,"file":"GClient.ts","path":"src/lib"}},{"name":"HandlerManager","construct":{"name":"constructor","returns":[[["HandlerManager"]]],"meta":{"line":24,"file":"HandlerManager.ts","path":"src/lib/managers"}},"props":[{"name":"autocompleteHandler","type":[[["("],["interaction",": "],["AutocompleteInteraction","<"],["CacheType",">) => "],["any"]]],"meta":{"line":21,"file":"HandlerManager.ts","path":"src/lib/managers"}},{"name":"componentHandler","type":[[["("],["interaction",": "],["MessageComponentInteraction","<"],["CacheType",">) => "],["any"]]],"meta":{"line":20,"file":"HandlerManager.ts","path":"src/lib/managers"}},{"name":"cooldownHandler","type":[[["("],["userId",": "],["string",", "],["item",": "],["Command"," | "],["Component",", "],["collection",": "],["Collection","<"],["string",", "],["Collection","<"],["string",", "],["number",">>) => "],["number"," | "],["void"]]],"meta":{"line":22,"file":"HandlerManager.ts","path":"src/lib/managers"}},{"name":"interactionCommandHandler","type":[[["("],["interaction",": "],["CommandInteraction","<"],["CacheType","> | "],["ContextMenuInteraction","<"],["CacheType",">) => "],["any"]]],"meta":{"line":18,"file":"HandlerManager.ts","path":"src/lib/managers"}},{"name":"messageCommandHandler","type":[[["("],["message",": "],["Message","<"],["boolean",">, "],["commandName",": "],["string",", "],["args",": "],["Array","<"],["string","> | "],["Array","<"],["object",">) => "],["any"]]],"meta":{"line":19,"file":"HandlerManager.ts","path":"src/lib/managers"}}],"methods":[{"name":"setAutocompleteHandler","params":[{"name":"handler","optional":false,"type":[[["("],["interaction",": "],["AutocompleteInteraction","<"],["CacheType",">) => "],["any"]]]}],"returns":[[["HandlerManager"]]],"meta":{"line":50,"file":"HandlerManager.ts","path":"src/lib/managers"}},{"name":"setComponentHandler","params":[{"name":"handler","optional":false,"type":[[["("],["interaction",": "],["MessageComponentInteraction","<"],["CacheType",">) => "],["any"]]]}],"returns":[[["HandlerManager"]]],"meta":{"line":44,"file":"HandlerManager.ts","path":"src/lib/managers"}},{"name":"setCooldownHandler","params":[{"name":"handler","optional":false,"type":[[["("],["userId",": "],["string",", "],["item",": "],["Command"," | "],["Component",", "],["collection",": "],["Collection","<"],["string",", "],["Collection","<"],["string",", "],["number",">>) => "],["number"," | "],["void"]]]}],"returns":[[["HandlerManager"]]],"meta":{"line":56,"file":"HandlerManager.ts","path":"src/lib/managers"}},{"name":"setInteractionCommandHandler","params":[{"name":"handler","optional":false,"type":[[["("],["interaction",": "],["CommandInteraction","<"],["CacheType","> | "],["ContextMenuInteraction","<"],["CacheType",">) => "],["any"]]]}],"returns":[[["HandlerManager"]]],"meta":{"line":32,"file":"HandlerManager.ts","path":"src/lib/managers"}},{"name":"setMessageCommandHandler","params":[{"name":"handler","optional":false,"type":[[["("],["message",": "],["Message","<"],["boolean",">, "],["commandName",": "],["string",", "],["args",": "],["Array","<"],["string","> | "],["Array","<"],["object",">) => "],["any"]]]}],"returns":[[["HandlerManager"]]],"meta":{"line":38,"file":"HandlerManager.ts","path":"src/lib/managers"}}],"meta":{"line":17,"file":"HandlerManager.ts","path":"src/lib/managers"}},{"name":"Listener","construct":{"name":"constructor","params":[{"name":"options","optional":false,"type":[[["ListenerOptions","<"],["WS",", "],["Event",">"]]]}],"returns":[[["Listener","<"],["WS",", "],["Event",">"]]],"meta":{"line":27,"file":"Listener.ts","path":"src/lib/structures"}},"props":[{"name":"client","type":[[["GClient","<"],["boolean",">"]]],"meta":{"line":17,"file":"Listener.ts","path":"src/lib/structures"}},{"name":"event","readonly":true,"type":[[["Event"]]],"meta":{"line":18,"file":"Listener.ts","path":"src/lib/structures"}},{"name":"fileName","readonly":true,"type":[[["string"]]],"meta":{"line":22,"file":"Listener.ts","path":"src/lib/structures"}},{"name":"name","readonly":true,"type":[[["string"]]],"meta":{"line":19,"file":"Listener.ts","path":"src/lib/structures"}},{"name":"once","readonly":true,"type":[[["boolean"]]],"meta":{"line":20,"file":"Listener.ts","path":"src/lib/structures"}},{"name":"owner","type":[[["string"]]],"meta":{"line":24,"file":"Listener.ts","path":"src/lib/structures"}},{"name":"reloading","default":"false","type":[[["boolean"]]],"meta":{"line":25,"file":"Listener.ts","path":"src/lib/structures"}},{"name":"run","readonly":true,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["any"]]],"meta":{"line":23,"file":"Listener.ts","path":"src/lib/structures"}},{"name":"ws","readonly":true,"type":[[["WS"]]],"meta":{"line":21,"file":"Listener.ts","path":"src/lib/structures"}}],"methods":[{"name":"_run","access":"private","params":[{"name":"args","optional":false,"type":[[["Array","<"],["any",">"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":58,"file":"Listener.ts","path":"src/lib/structures"}},{"name":"initialize","params":[{"name":"client","optional":false,"type":[[["GClient","<"],["boolean",">"]]]}],"returns":[[["void"]]],"meta":{"line":33,"file":"Listener.ts","path":"src/lib/structures"}},{"name":"reload","returns":[[["Promise","<"],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>"]]],"meta":{"line":65,"file":"Listener.ts","path":"src/lib/structures"}},{"name":"unregister","returns":[[["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">"]]],"meta":{"line":54,"file":"Listener.ts","path":"src/lib/structures"}},{"name":"validate","scope":"static","params":[{"name":"listener","optional":false,"type":[[["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">"]]]}],"returns":[[["boolean"," | "],["void"]]],"meta":{"line":40,"file":"Listener.ts","path":"src/lib/structures"}}],"meta":{"line":16,"file":"Listener.ts","path":"src/lib/structures"}},{"name":"ListenerManager","extends":["Collection<string, Listener>"],"construct":{"name":"constructor","params":[{"name":"entries","optional":true,"type":[[["readonly"," "],["Array","<"],["readonly"," ["],["string",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">]>"]]]}],"returns":[[["ListenerManager"]]]},"props":[{"name":"[toStringTag]","readonly":true,"type":[[["string"]]],"meta":{"line":135,"file":"lib.es2015.symbol.wellknown.d.ts","path":"node_modules/typescript/lib"}},{"name":"client","access":"private","type":[[["GClient","<"],["boolean",">"]]],"meta":{"line":8,"file":"ListenerManager.ts","path":"src/lib/managers"}},{"name":"constructor","type":[[["CollectionConstructor"]]],"meta":{"line":17,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"size","readonly":true,"type":[[["number"]]],"meta":{"line":28,"file":"lib.es2015.collection.d.ts","path":"node_modules/typescript/lib"}},{"name":"[species]","scope":"static","readonly":true,"type":[[["MapConstructor"]]],"meta":{"line":317,"file":"lib.es2015.symbol.wellknown.d.ts","path":"node_modules/typescript/lib"}},{"name":"default","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["Collection",")"]]],"meta":{"line":24,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}}],"methods":[{"name":"[iterator]","description":"Returns an iterable of entries in the map.","returns":[[["IterableIterator","<["],["string",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">]>"]]]},{"name":"at","description":"Identical to [Array.at()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at).\nReturns the item at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.","params":[{"name":"index","description":"The index of the element to obtain","optional":false,"type":[[["number"]]]}],"returns":[[["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">"]]],"meta":{"line":97,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"clear","returns":[[["void"]]]},{"name":"clone","description":"Creates an identical shallow copy of this collection.","see":[],"examples":["const newColl = someColl.clone();"],"abstract":false,"deprecated":false,"emits":[],"returns":[[["Collection","<"],["string",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>"]]],"meta":{"line":316,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"concat","description":"Combines this collection with others into a new collection. None of the source collections are modified.","see":[],"examples":["const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"collections","description":"Collections to merge","optional":false,"type":[[["Array","<"],["Collection","<"],["string",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>>"]]]}],"returns":[[["Collection","<"],["string",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>"]]],"meta":{"line":325,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"delete","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[[["boolean"]]]},{"name":"difference","description":"The difference method returns a new structure containing items where the key is present in one of the original structures but not the other.","params":[{"name":"other","description":"The other Collection to filter against","optional":false,"type":[[["Collection","<"],["string",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>"]]]}],"returns":[[["Collection","<"],["string",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>"]]],"meta":{"line":359,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"each","description":"Identical to\n[Map.forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach),\nbut returns the collection instead of undefined.","see":[],"examples":["collection\n .each(user => console.log(user.username))\n .filter(user => user.bot)\n .each(user => console.log(user.username));"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function to execute for each element","optional":false,"type":[[["("],["value",": "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">, "],["key",": "],["string",", "],["collection",": "],["ListenerManager",") => "],["void"]]]}],"returns":[[["ListenerManager"]]],"meta":{"line":294,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"ensure","description":"Obtains the value of the given key if it exists, otherwise sets and returns the value provided by the default value generator.","see":[],"examples":["collection.ensure(guildId, () => defaultGuildConfig);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"key","description":"The key to get if it exists, or set otherwise","optional":false,"type":[[["string"]]]},{"name":"defaultValueGenerator","description":"A function that generates the default value","optional":false,"type":[[["("],["key",": "],["string",", "],["collection",": "],["ListenerManager",") => "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">"]]]}],"returns":[[["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">"]]],"meta":{"line":34,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"entries","description":"Returns an iterable of key, value pairs for every entry in the map.","returns":[[["IterableIterator","<["],["string",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">]>"]]]},{"name":"equals","description":"Checks if this collection shares identical items with another.\nThis is different to checking for equality using equal-signs, because\nthe collections may be different objects, but contain the same data.","params":[{"name":"collection","description":"Collection to compare with","optional":false,"type":[[["Collection","<"],["string",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>"]]]}],"returns":[[["boolean"]]],"returnsDescription":"Whether the collections have identical contents","meta":{"line":335,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"every","description":"Checks if all items passes a test. Identical in behavior to\n[Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).","see":[],"examples":["collection.every(user => !user.bot);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">, "],["key",": "],["string",", "],["collection",": "],["ListenerManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["this"," "],["is"," "],["Collection","<"],["K2",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>"]]],"meta":{"line":262,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"filter","description":"Identical to\n[Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\nbut returns a Collection instead of an Array.","see":[],"examples":["collection.filter(user => user.username === 'Bob');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"The function to test with (should return boolean)","optional":false,"type":[[["("],["value",": "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">, "],["key",": "],["string",", "],["collection",": "],["ListenerManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["Collection","<"],["K2",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>"]]],"meta":{"line":182,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"find","description":"Searches for a single item where the given function returns a truthy value. This behaves like\n[Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\n<warn>All collections used in Discord.js are mapped using their `id` property, and if you want to find by id you\nshould use the `get` method. See\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>","see":[],"examples":["collection.find(user => user.username === 'Bob');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"The function to test with (should return boolean)","optional":false,"type":[[["("],["value",": "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">, "],["key",": "],["string",", "],["collection",": "],["ListenerManager",") => "],["value"," "],["is"," "],["V2"]]]}],"returns":[[["V2"]]],"meta":{"line":142,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"findKey","description":"Searches for the key of a single item where the given function returns a truthy value. This behaves like\n[Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex),\nbut returns the key rather than the positional index.","see":[],"examples":["collection.findKey(user => user.username === 'Bob');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"The function to test with (should return boolean)","optional":false,"type":[[["("],["value",": "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">, "],["key",": "],["string",", "],["collection",": "],["ListenerManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["K2"]]],"meta":{"line":157,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"first","description":"Obtains the first value(s) in this collection.","returns":[[["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">"]]],"returnsDescription":"A single value if no amount is provided or an array of values, starting from the end if amount is negative","meta":{"line":58,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"firstKey","description":"Obtains the first key(s) in this collection.","returns":[[["string"]]],"returnsDescription":"A single key if no amount is provided or an array of keys, starting from the end if\namount is negative","meta":{"line":68,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"flatMap","description":"Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to\n[Array.flatMap()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap).","see":[],"examples":["collection.flatMap(guild => guild.members.cache);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function that produces a new Collection","optional":false,"type":[[["("],["value",": "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">, "],["key",": "],["string",", "],["collection",": "],["ListenerManager",") => "],["Collection","<"],["string",", "],["T",">"]]]}],"returns":[[["Collection","<"],["string",", "],["T",">"]]],"meta":{"line":214,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"forEach","params":[{"name":"callbackfn","optional":false,"type":[[["("],["value",": "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">, "],["key",": "],["string",", "],["map",": "],["Map","<"],["string",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>) => "],["void"]]]},{"name":"thisArg","optional":true,"type":[[["any"]]]}],"returns":[[["void"]]]},{"name":"get","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[[["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">"]]]},{"name":"has","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[[["boolean"]]]},{"name":"hasAll","description":"Checks if all of the elements exist in the collection.","params":[{"name":"keys","description":"The keys of the elements to check for","optional":false,"type":[[["Array","<"],["string",">"]]]}],"returns":[[["boolean"]]],"returnsDescription":"`true` if all of the elements exist, `false` if at least one does not exist.","meta":{"line":42,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"hasAny","description":"Checks if any of the elements exist in the collection.","params":[{"name":"keys","description":"The keys of the elements to check for","optional":false,"type":[[["Array","<"],["string",">"]]]}],"returns":[[["boolean"]]],"returnsDescription":"`true` if any of the elements exist, `false` if none exist.","meta":{"line":50,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"initialize","access":"private","params":[{"name":"listener","optional":false,"type":[[["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">"]]]}],"returns":[[["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">"]]],"meta":{"line":40,"file":"ListenerManager.ts","path":"src/lib/managers"}},{"name":"initiate","params":[{"name":"client","optional":false,"type":[[["GClient","<"],["boolean",">"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":49,"file":"ListenerManager.ts","path":"src/lib/managers"}},{"name":"intersect","description":"The intersect method returns a new structure containing items where the keys are present in both original structures.","params":[{"name":"other","description":"The other Collection to filter against","optional":false,"type":[[["Collection","<"],["string",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>"]]]}],"returns":[[["Collection","<"],["string",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>"]]],"meta":{"line":353,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"keyAt","description":"Identical to [Array.at()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at).\nReturns the key at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.","params":[{"name":"index","description":"The index of the key to obtain","optional":false,"type":[[["number"]]]}],"returns":[[["string"]]],"meta":{"line":105,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"keys","description":"Returns an iterable of keys in the map","returns":[[["IterableIterator","<"],["string",">"]]]},{"name":"last","description":"Obtains the last value(s) in this collection.","returns":[[["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">"]]],"returnsDescription":"A single value if no amount is provided or an array of values, starting from the start if\namount is negative","meta":{"line":78,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"lastKey","description":"Obtains the last key(s) in this collection.","returns":[[["string"]]],"returnsDescription":"A single key if no amount is provided or an array of keys, starting from the start if\namount is negative","meta":{"line":88,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"map","description":"Maps each item to another value into an array. Identical in behavior to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","see":[],"examples":["collection.map(user => user.tag);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function that produces an element of the new array, taking three arguments","optional":false,"type":[[["("],["value",": "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">, "],["key",": "],["string",", "],["collection",": "],["ListenerManager",") => "],["T"]]]}],"returns":[[["Array","<"],["T",">"]]],"meta":{"line":226,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"mapValues","description":"Maps each item to another value into a collection. Identical in behavior to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","see":[],"examples":["collection.mapValues(user => user.tag);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function that produces an element of the new collection, taking three arguments","optional":false,"type":[[["("],["value",": "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">, "],["key",": "],["string",", "],["collection",": "],["ListenerManager",") => "],["T"]]]}],"returns":[[["Collection","<"],["string",", "],["T",">"]]],"meta":{"line":238,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"partition","description":"Partitions the collection into two collections where the first collection\ncontains the items that passed and the second contains the items that failed.","see":[],"examples":["const [big, small] = collection.partition(guild => guild.memberCount > 250);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">, "],["key",": "],["string",", "],["collection",": "],["ListenerManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["["],["Collection","<"],["K2",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>, "],["Collection","<"],["Exclude","<"],["string",", "],["K2",">, "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>]"]]],"meta":{"line":198,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"random","description":"Obtains unique random value(s) from this collection.","returns":[[["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">"]]],"returnsDescription":"A single value if no amount is provided or an array of values","meta":{"line":113,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"randomKey","description":"Obtains unique random key(s) from this collection.","returns":[[["string"]]],"returnsDescription":"A single key if no amount is provided or an array","meta":{"line":122,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"reduce","description":"Applies a function to produce a single value. Identical in behavior to\n[Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).","see":[],"examples":["collection.reduce((acc, guild) => acc + guild.memberCount, 0);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\nand `collection`","optional":false,"type":[[["("],["accumulator",": "],["T",", "],["value",": "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">, "],["key",": "],["string",", "],["collection",": "],["ListenerManager",") => "],["T"]]]},{"name":"initialValue","description":"Starting value for the accumulator","optional":true,"type":[[["T"]]]}],"returns":[[["T"]]],"meta":{"line":279,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"register","params":[{"name":"listener","optional":false,"type":[[["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">"]]]}],"returns":[[["ListenerManager"]]],"meta":{"line":10,"file":"ListenerManager.ts","path":"src/lib/managers"}},{"name":"reverse","description":"Identical to [Array.reverse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse)\nbut returns a Collection instead of an Array.","returns":[[["ListenerManager"]]],"meta":{"line":128,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"set","params":[{"name":"key","optional":false,"type":[[["string"]]]},{"name":"value","optional":false,"type":[[["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">"]]]}],"returns":[[["ListenerManager"]]]},{"name":"some","description":"Checks if there exists an item that passes a test. Identical in behavior to\n[Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).","see":[],"examples":["collection.some(user => user.discriminator === '0000');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">, "],["key",": "],["string",", "],["collection",": "],["ListenerManager",") => "],["boolean"]]]}],"returns":[[["boolean"]]],"meta":{"line":250,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"sort","description":"The sort method sorts the items of a collection in place and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.","see":[],"examples":["collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"compareFunction","description":"Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.","optional":true,"type":[[["Comparator","<"],["string",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>"]]]}],"returns":[[["ListenerManager"]]],"meta":{"line":347,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"sorted","description":"The sorted method sorts the items of a collection and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.","see":[],"examples":["collection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"compareFunction","description":"Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value,\naccording to the string conversion of each element.","optional":true,"type":[[["Comparator","<"],["string",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>"]]]}],"returns":[[["Collection","<"],["string",", "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>"]]],"meta":{"line":372,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"sweep","description":"Removes items that satisfy the provided filter function.","params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">, "],["key",": "],["string",", "],["collection",": "],["ListenerManager",") => "],["boolean"]]]}],"returns":[[["number"]]],"returnsDescription":"The number of removed entries","meta":{"line":169,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"tap","description":"Runs a function on the collection and returns the collection.","see":[],"examples":["collection\n .tap(coll => console.log(coll.size))\n .filter(user => user.bot)\n .tap(coll => console.log(coll.size))"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function to execute","optional":false,"type":[[["("],["collection",": "],["ListenerManager",") => "],["void"]]]}],"returns":[[["ListenerManager"]]],"meta":{"line":308,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"toJSON","returns":[[["Array","<"],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>"]]],"meta":{"line":373,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"unregister","params":[{"name":"name","optional":false,"type":[[["string"]]]}],"returns":[[["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">"]]],"meta":{"line":26,"file":"ListenerManager.ts","path":"src/lib/managers"}},{"name":"values","description":"Returns an iterable of values in the map","returns":[[["IterableIterator","<"],["Listener","<"],["boolean",", "],["WSEventType"," | "],["keyof"," "],["ClientEvents",">>"]]]}],"meta":{"line":7,"file":"ListenerManager.ts","path":"src/lib/managers"}},{"name":"MessageActionRow","extends":["BaseMessageComponent"],"construct":{"name":"constructor","params":[{"name":"data","optional":true,"type":[[["APIActionRowComponent"," | "],["MessageActionRow"," | "],["MessageActionRowOptions"]]]}],"returns":[[["MessageActionRow"]]],"meta":{"line":1556,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},"props":[{"name":"components","type":[[["Array","<"],["MessageActionRowComponent",">"]]],"meta":{"line":1558,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"type","type":[[["'ACTION","_"],["ROW'"]]],"meta":{"line":1557,"file":"index.d.ts","path":"node_modules/discord.js/typings"}}],"methods":[{"name":"addComponents","params":[{"name":"components","optional":false,"type":[[["Array","<"],["MessageActionRowComponentResolvable","> | "],["Array","<"],["Array","<"],["MessageActionRowComponentResolvable",">>"]]]}],"returns":[[["MessageActionRow"]]],"meta":{"line":1559,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setComponents","params":[{"name":"components","optional":false,"type":[[["Array","<"],["MessageActionRowComponentResolvable","> | "],["Array","<"],["Array","<"],["MessageActionRowComponentResolvable",">>"]]]}],"returns":[[["MessageActionRow"]]],"meta":{"line":1562,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"spliceComponents","params":[{"name":"index","optional":false,"type":[[["number"]]]},{"name":"deleteCount","optional":false,"type":[[["number"]]]},{"name":"components","optional":false,"type":[[["Array","<"],["MessageActionRowComponentResolvable","> | "],["Array","<"],["Array","<"],["MessageActionRowComponentResolvable",">>"]]]}],"returns":[[["MessageActionRow"]]],"meta":{"line":1565,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"toJSON","returns":[[["APIActionRowComponent"]]],"meta":{"line":1570,"file":"index.d.ts","path":"node_modules/discord.js/typings"}}],"meta":{"line":1555,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"MessageButton","extends":["BaseMessageComponent"],"construct":{"name":"constructor","params":[{"name":"data","optional":true,"type":[[["MessageButton"," | "],["APIButtonComponent"," | "],["MessageButtonOptions"]]]}],"returns":[[["MessageButton"]]],"meta":{"line":1596,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},"props":[{"name":"customId","type":[[["string"]]],"meta":{"line":1597,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"disabled","type":[[["boolean"]]],"meta":{"line":1598,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"emoji","type":[[["APIPartialEmoji"]]],"meta":{"line":1599,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"label","type":[[["string"]]],"meta":{"line":1600,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"style","type":[[["'PRIMARY'"," | "],["'SECONDARY'"," | "],["'SUCCESS'"," | "],["'DANGER'"," | "],["'LINK'"]]],"meta":{"line":1601,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"type","type":[[["'BUTTON'"]]],"meta":{"line":1602,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"url","type":[[["string"]]],"meta":{"line":1603,"file":"index.d.ts","path":"node_modules/discord.js/typings"}}],"methods":[{"name":"setCustomId","params":[{"name":"customId","optional":false,"type":[[["string"]]]}],"returns":[[["MessageButton"]]],"meta":{"line":1604,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setDisabled","params":[{"name":"disabled","optional":true,"type":[[["boolean"]]]}],"returns":[[["MessageButton"]]],"meta":{"line":1605,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setEmoji","params":[{"name":"emoji","optional":false,"type":[[["EmojiIdentifierResolvable"]]]}],"returns":[[["MessageButton"]]],"meta":{"line":1606,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setLabel","params":[{"name":"label","optional":false,"type":[[["string"]]]}],"returns":[[["MessageButton"]]],"meta":{"line":1607,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setStyle","params":[{"name":"style","optional":false,"type":[[["MessageButtonStyleResolvable"]]]}],"returns":[[["MessageButton"]]],"meta":{"line":1608,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setURL","params":[{"name":"url","optional":false,"type":[[["string"]]]}],"returns":[[["MessageButton"]]],"meta":{"line":1609,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"toJSON","returns":[[["APIButtonComponent"]]],"meta":{"line":1610,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"resolveStyle","scope":"static","access":"private","params":[{"name":"style","optional":false,"type":[[["MessageButtonStyleResolvable"]]]}],"returns":[[["'PRIMARY'"," | "],["'SECONDARY'"," | "],["'SUCCESS'"," | "],["'DANGER'"," | "],["'LINK'"]]],"meta":{"line":1611,"file":"index.d.ts","path":"node_modules/discord.js/typings"}}],"meta":{"line":1595,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"MessageEmbed","construct":{"name":"constructor","params":[{"name":"data","optional":true,"type":[[["MessageEmbed"," | "],["MessageEmbedOptions"," | "],["APIEmbed"]]]}],"returns":[[["MessageEmbed"]]],"meta":{"line":1676,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},"props":[{"name":"author","type":[[["MessageEmbedAuthor"]]],"meta":{"line":1677,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"color","type":[[["number"]]],"meta":{"line":1678,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"createdAt","readonly":true,"type":[[["Date"]]],"meta":{"line":1679,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"description","type":[[["string"]]],"meta":{"line":1680,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"fields","type":[[["Array","<"],["EmbedField",">"]]],"meta":{"line":1681,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"footer","type":[[["MessageEmbedFooter"]]],"meta":{"line":1682,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"hexColor","readonly":true,"type":[[["unknown"]]],"meta":{"line":1683,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"image","type":[[["MessageEmbedImage"]]],"meta":{"line":1684,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"length","readonly":true,"type":[[["number"]]],"meta":{"line":1685,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"provider","type":[[["MessageEmbedProvider"]]],"meta":{"line":1686,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"thumbnail","type":[[["MessageEmbedThumbnail"]]],"meta":{"line":1687,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"timestamp","type":[[["number"]]],"meta":{"line":1688,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"title","type":[[["string"]]],"meta":{"line":1689,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"type","see":[],"abstract":false,"deprecated":true,"type":[[["string"]]],"meta":{"line":1691,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"url","type":[[["string"]]],"meta":{"line":1692,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"video","readonly":true,"type":[[["MessageEmbedVideo"]]],"meta":{"line":1693,"file":"index.d.ts","path":"node_modules/discord.js/typings"}}],"methods":[{"name":"_fieldEquals","access":"private","params":[{"name":"field","optional":false,"type":[[["EmbedField"]]]},{"name":"other","optional":false,"type":[[["EmbedField"]]]}],"returns":[[["boolean"]]],"meta":{"line":1674,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"addField","params":[{"name":"name","optional":false,"type":[[["string"]]]},{"name":"value","optional":false,"type":[[["string"]]]},{"name":"inline","optional":true,"type":[[["boolean"]]]}],"returns":[[["MessageEmbed"]]],"meta":{"line":1694,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"addFields","params":[{"name":"fields","optional":false,"type":[[["Array","<"],["EmbedFieldData","> | "],["Array","<"],["Array","<"],["EmbedFieldData",">>"]]]}],"returns":[[["MessageEmbed"]]],"meta":{"line":1695,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"equals","params":[{"name":"embed","optional":false,"type":[[["MessageEmbed"," | "],["APIEmbed"]]]}],"returns":[[["boolean"]]],"meta":{"line":1711,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setAuthor","see":[],"examples":[],"abstract":false,"deprecated":true,"emits":[],"params":[{"name":"options","optional":false,"type":[[["EmbedAuthorData"]]]}],"returns":[[["MessageEmbed"]]],"meta":{"line":1697,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setColor","params":[{"name":"color","optional":false,"type":[[["ColorResolvable"]]]}],"returns":[[["MessageEmbed"]]],"meta":{"line":1700,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setDescription","params":[{"name":"description","optional":false,"type":[[["string"]]]}],"returns":[[["MessageEmbed"]]],"meta":{"line":1701,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setFields","params":[{"name":"fields","optional":false,"type":[[["Array","<"],["EmbedFieldData","> | "],["Array","<"],["Array","<"],["EmbedFieldData",">>"]]]}],"returns":[[["MessageEmbed"]]],"meta":{"line":1696,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setFooter","see":[],"examples":[],"abstract":false,"deprecated":true,"emits":[],"params":[{"name":"options","optional":false,"type":[[["EmbedFooterData"]]]}],"returns":[[["MessageEmbed"]]],"meta":{"line":1702,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setImage","params":[{"name":"url","optional":false,"type":[[["string"]]]}],"returns":[[["MessageEmbed"]]],"meta":{"line":1705,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setThumbnail","params":[{"name":"url","optional":false,"type":[[["string"]]]}],"returns":[[["MessageEmbed"]]],"meta":{"line":1706,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setTimestamp","params":[{"name":"timestamp","optional":true,"type":[[["number"," | "],["Date"]]]}],"returns":[[["MessageEmbed"]]],"meta":{"line":1707,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setTitle","params":[{"name":"title","optional":false,"type":[[["string"]]]}],"returns":[[["MessageEmbed"]]],"meta":{"line":1708,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setURL","params":[{"name":"url","optional":false,"type":[[["string"]]]}],"returns":[[["MessageEmbed"]]],"meta":{"line":1709,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"spliceFields","params":[{"name":"index","optional":false,"type":[[["number"]]]},{"name":"deleteCount","optional":false,"type":[[["number"]]]},{"name":"fields","optional":false,"type":[[["Array","<"],["EmbedFieldData","> | "],["Array","<"],["Array","<"],["EmbedFieldData",">>"]]]}],"returns":[[["MessageEmbed"]]],"meta":{"line":1710,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"toJSON","returns":[[["APIEmbed"]]],"meta":{"line":1712,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"normalizeField","scope":"static","params":[{"name":"name","optional":false,"type":[[["string"]]]},{"name":"value","optional":false,"type":[[["string"]]]},{"name":"inline","optional":true,"type":[[["boolean"]]]}],"returns":[[["Required","<"],["EmbedFieldData",">"]]],"meta":{"line":1714,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"normalizeFields","scope":"static","params":[{"name":"fields","optional":false,"type":[[["Array","<"],["EmbedFieldData","> | "],["Array","<"],["Array","<"],["EmbedFieldData",">>"]]]}],"returns":[[["Array","<"],["Required","<"],["EmbedFieldData",">>"]]],"meta":{"line":1715,"file":"index.d.ts","path":"node_modules/discord.js/typings"}}],"meta":{"line":1673,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"MessageSelectMenu","extends":["BaseMessageComponent"],"construct":{"name":"constructor","params":[{"name":"data","optional":true,"type":[[["MessageSelectMenu"," | "],["APISelectMenuComponent"," | "],["MessageSelectMenuOptions"]]]}],"returns":[[["MessageSelectMenu"]]],"meta":{"line":1796,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},"props":[{"name":"customId","type":[[["string"]]],"meta":{"line":1797,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"disabled","type":[[["boolean"]]],"meta":{"line":1798,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"maxValues","type":[[["number"]]],"meta":{"line":1799,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"minValues","type":[[["number"]]],"meta":{"line":1800,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"options","type":[[["Array","<"],["MessageSelectOption",">"]]],"meta":{"line":1801,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"placeholder","type":[[["string"]]],"meta":{"line":1802,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"type","type":[[["'SELECT","_"],["MENU'"]]],"meta":{"line":1803,"file":"index.d.ts","path":"node_modules/discord.js/typings"}}],"methods":[{"name":"addOptions","params":[{"name":"options","optional":false,"type":[[["Array","<"],["MessageSelectOptionData","> | "],["Array","<"],["Array","<"],["MessageSelectOptionData",">>"]]]}],"returns":[[["MessageSelectMenu"]]],"meta":{"line":1804,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setCustomId","params":[{"name":"customId","optional":false,"type":[[["string"]]]}],"returns":[[["MessageSelectMenu"]]],"meta":{"line":1806,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setDisabled","params":[{"name":"disabled","optional":true,"type":[[["boolean"]]]}],"returns":[[["MessageSelectMenu"]]],"meta":{"line":1807,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setMaxValues","params":[{"name":"maxValues","optional":false,"type":[[["number"]]]}],"returns":[[["MessageSelectMenu"]]],"meta":{"line":1808,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setMinValues","params":[{"name":"minValues","optional":false,"type":[[["number"]]]}],"returns":[[["MessageSelectMenu"]]],"meta":{"line":1809,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setOptions","params":[{"name":"options","optional":false,"type":[[["Array","<"],["MessageSelectOptionData","> | "],["Array","<"],["Array","<"],["MessageSelectOptionData",">>"]]]}],"returns":[[["MessageSelectMenu"]]],"meta":{"line":1805,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"setPlaceholder","params":[{"name":"placeholder","optional":false,"type":[[["string"]]]}],"returns":[[["MessageSelectMenu"]]],"meta":{"line":1810,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"spliceOptions","params":[{"name":"index","optional":false,"type":[[["number"]]]},{"name":"deleteCount","optional":false,"type":[[["number"]]]},{"name":"options","optional":false,"type":[[["Array","<"],["MessageSelectOptionData","> | "],["Array","<"],["Array","<"],["MessageSelectOptionData",">>"]]]}],"returns":[[["MessageSelectMenu"]]],"meta":{"line":1811,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"toJSON","returns":[[["APISelectMenuComponent"]]],"meta":{"line":1816,"file":"index.d.ts","path":"node_modules/discord.js/typings"}}],"meta":{"line":1795,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"Plugin","construct":{"name":"constructor","params":[{"name":"name","optional":false,"type":[[["string"]]]},{"name":"run","optional":false,"type":[[["("],["client",": "],["GClient","<"],["boolean",">) => "],["any"]]]}],"returns":[[["Plugin"]]],"meta":{"line":10,"file":"Plugin.ts","path":"src/lib/structures"}},"props":[{"name":"name","readonly":true,"type":[[["string"]]],"meta":{"line":7,"file":"Plugin.ts","path":"src/lib/structures"}},{"name":"run","readonly":true,"type":[[["("],["client",": "],["GClient","<"],["boolean",">) => "],["any"]]],"meta":{"line":8,"file":"Plugin.ts","path":"src/lib/structures"}}],"methods":[{"name":"validate","scope":"static","params":[{"name":"plugin","optional":false,"type":[[["Plugin"]]]}],"returns":[[["boolean"," | "],["void"]]],"meta":{"line":17,"file":"Plugin.ts","path":"src/lib/structures"}}],"meta":{"line":6,"file":"Plugin.ts","path":"src/lib/structures"}},{"name":"PluginManager","extends":["Collection<string, Plugin>"],"construct":{"name":"constructor","params":[{"name":"entries","optional":true,"type":[[["readonly"," "],["Array","<"],["readonly"," ["],["string",", "],["Plugin","]>"]]]}],"returns":[[["PluginManager"]]]},"props":[{"name":"[toStringTag]","readonly":true,"type":[[["string"]]],"meta":{"line":135,"file":"lib.es2015.symbol.wellknown.d.ts","path":"node_modules/typescript/lib"}},{"name":"client","access":"private","type":[[["GClient","<"],["boolean",">"]]],"meta":{"line":8,"file":"PluginManager.ts","path":"src/lib/managers"}},{"name":"constructor","type":[[["CollectionConstructor"]]],"meta":{"line":17,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"currentlyLoading","default":"null","type":[[["string"]]],"meta":{"line":9,"file":"PluginManager.ts","path":"src/lib/managers"}},{"name":"size","readonly":true,"type":[[["number"]]],"meta":{"line":28,"file":"lib.es2015.collection.d.ts","path":"node_modules/typescript/lib"}},{"name":"[species]","scope":"static","readonly":true,"type":[[["MapConstructor"]]],"meta":{"line":317,"file":"lib.es2015.symbol.wellknown.d.ts","path":"node_modules/typescript/lib"}},{"name":"default","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["Collection",")"]]],"meta":{"line":24,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}}],"methods":[{"name":"[iterator]","description":"Returns an iterable of entries in the map.","returns":[[["IterableIterator","<["],["string",", "],["Plugin","]>"]]]},{"name":"at","description":"Identical to [Array.at()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at).\nReturns the item at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.","params":[{"name":"index","description":"The index of the element to obtain","optional":false,"type":[[["number"]]]}],"returns":[[["Plugin"]]],"meta":{"line":97,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"clear","returns":[[["void"]]]},{"name":"clone","description":"Creates an identical shallow copy of this collection.","see":[],"examples":["const newColl = someColl.clone();"],"abstract":false,"deprecated":false,"emits":[],"returns":[[["Collection","<"],["string",", "],["Plugin",">"]]],"meta":{"line":316,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"concat","description":"Combines this collection with others into a new collection. None of the source collections are modified.","see":[],"examples":["const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"collections","description":"Collections to merge","optional":false,"type":[[["Array","<"],["Collection","<"],["string",", "],["Plugin",">>"]]]}],"returns":[[["Collection","<"],["string",", "],["Plugin",">"]]],"meta":{"line":325,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"delete","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[[["boolean"]]]},{"name":"difference","description":"The difference method returns a new structure containing items where the key is present in one of the original structures but not the other.","params":[{"name":"other","description":"The other Collection to filter against","optional":false,"type":[[["Collection","<"],["string",", "],["Plugin",">"]]]}],"returns":[[["Collection","<"],["string",", "],["Plugin",">"]]],"meta":{"line":359,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"each","description":"Identical to\n[Map.forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach),\nbut returns the collection instead of undefined.","see":[],"examples":["collection\n .each(user => console.log(user.username))\n .filter(user => user.bot)\n .each(user => console.log(user.username));"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function to execute for each element","optional":false,"type":[[["("],["value",": "],["Plugin",", "],["key",": "],["string",", "],["collection",": "],["PluginManager",") => "],["void"]]]}],"returns":[[["PluginManager"]]],"meta":{"line":294,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"ensure","description":"Obtains the value of the given key if it exists, otherwise sets and returns the value provided by the default value generator.","see":[],"examples":["collection.ensure(guildId, () => defaultGuildConfig);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"key","description":"The key to get if it exists, or set otherwise","optional":false,"type":[[["string"]]]},{"name":"defaultValueGenerator","description":"A function that generates the default value","optional":false,"type":[[["("],["key",": "],["string",", "],["collection",": "],["PluginManager",") => "],["Plugin"]]]}],"returns":[[["Plugin"]]],"meta":{"line":34,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"entries","description":"Returns an iterable of key, value pairs for every entry in the map.","returns":[[["IterableIterator","<["],["string",", "],["Plugin","]>"]]]},{"name":"equals","description":"Checks if this collection shares identical items with another.\nThis is different to checking for equality using equal-signs, because\nthe collections may be different objects, but contain the same data.","params":[{"name":"collection","description":"Collection to compare with","optional":false,"type":[[["Collection","<"],["string",", "],["Plugin",">"]]]}],"returns":[[["boolean"]]],"returnsDescription":"Whether the collections have identical contents","meta":{"line":335,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"every","description":"Checks if all items passes a test. Identical in behavior to\n[Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).","see":[],"examples":["collection.every(user => !user.bot);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Plugin",", "],["key",": "],["string",", "],["collection",": "],["PluginManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["this"," "],["is"," "],["Collection","<"],["K2",", "],["Plugin",">"]]],"meta":{"line":262,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"filter","description":"Identical to\n[Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\nbut returns a Collection instead of an Array.","see":[],"examples":["collection.filter(user => user.username === 'Bob');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"The function to test with (should return boolean)","optional":false,"type":[[["("],["value",": "],["Plugin",", "],["key",": "],["string",", "],["collection",": "],["PluginManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["Collection","<"],["K2",", "],["Plugin",">"]]],"meta":{"line":182,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"find","description":"Searches for a single item where the given function returns a truthy value. This behaves like\n[Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\n<warn>All collections used in Discord.js are mapped using their `id` property, and if you want to find by id you\nshould use the `get` method. See\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>","see":[],"examples":["collection.find(user => user.username === 'Bob');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"The function to test with (should return boolean)","optional":false,"type":[[["("],["value",": "],["Plugin",", "],["key",": "],["string",", "],["collection",": "],["PluginManager",") => "],["value"," "],["is"," "],["V2"]]]}],"returns":[[["V2"]]],"meta":{"line":142,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"findKey","description":"Searches for the key of a single item where the given function returns a truthy value. This behaves like\n[Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex),\nbut returns the key rather than the positional index.","see":[],"examples":["collection.findKey(user => user.username === 'Bob');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"The function to test with (should return boolean)","optional":false,"type":[[["("],["value",": "],["Plugin",", "],["key",": "],["string",", "],["collection",": "],["PluginManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["K2"]]],"meta":{"line":157,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"first","description":"Obtains the first value(s) in this collection.","returns":[[["Plugin"]]],"returnsDescription":"A single value if no amount is provided or an array of values, starting from the end if amount is negative","meta":{"line":58,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"firstKey","description":"Obtains the first key(s) in this collection.","returns":[[["string"]]],"returnsDescription":"A single key if no amount is provided or an array of keys, starting from the end if\namount is negative","meta":{"line":68,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"flatMap","description":"Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to\n[Array.flatMap()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap).","see":[],"examples":["collection.flatMap(guild => guild.members.cache);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function that produces a new Collection","optional":false,"type":[[["("],["value",": "],["Plugin",", "],["key",": "],["string",", "],["collection",": "],["PluginManager",") => "],["Collection","<"],["string",", "],["T",">"]]]}],"returns":[[["Collection","<"],["string",", "],["T",">"]]],"meta":{"line":214,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"forEach","params":[{"name":"callbackfn","optional":false,"type":[[["("],["value",": "],["Plugin",", "],["key",": "],["string",", "],["map",": "],["Map","<"],["string",", "],["Plugin",">) => "],["void"]]]},{"name":"thisArg","optional":true,"type":[[["any"]]]}],"returns":[[["void"]]]},{"name":"get","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[[["Plugin"]]]},{"name":"has","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[[["boolean"]]]},{"name":"hasAll","description":"Checks if all of the elements exist in the collection.","params":[{"name":"keys","description":"The keys of the elements to check for","optional":false,"type":[[["Array","<"],["string",">"]]]}],"returns":[[["boolean"]]],"returnsDescription":"`true` if all of the elements exist, `false` if at least one does not exist.","meta":{"line":42,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"hasAny","description":"Checks if any of the elements exist in the collection.","params":[{"name":"keys","description":"The keys of the elements to check for","optional":false,"type":[[["Array","<"],["string",">"]]]}],"returns":[[["boolean"]]],"returnsDescription":"`true` if any of the elements exist, `false` if none exist.","meta":{"line":50,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"initiate","params":[{"name":"client","optional":false,"type":[[["GClient","<"],["boolean",">"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":26,"file":"PluginManager.ts","path":"src/lib/managers"}},{"name":"intersect","description":"The intersect method returns a new structure containing items where the keys are present in both original structures.","params":[{"name":"other","description":"The other Collection to filter against","optional":false,"type":[[["Collection","<"],["string",", "],["Plugin",">"]]]}],"returns":[[["Collection","<"],["string",", "],["Plugin",">"]]],"meta":{"line":353,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"keyAt","description":"Identical to [Array.at()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at).\nReturns the key at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.","params":[{"name":"index","description":"The index of the key to obtain","optional":false,"type":[[["number"]]]}],"returns":[[["string"]]],"meta":{"line":105,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"keys","description":"Returns an iterable of keys in the map","returns":[[["IterableIterator","<"],["string",">"]]]},{"name":"last","description":"Obtains the last value(s) in this collection.","returns":[[["Plugin"]]],"returnsDescription":"A single value if no amount is provided or an array of values, starting from the start if\namount is negative","meta":{"line":78,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"lastKey","description":"Obtains the last key(s) in this collection.","returns":[[["string"]]],"returnsDescription":"A single key if no amount is provided or an array of keys, starting from the start if\namount is negative","meta":{"line":88,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"map","description":"Maps each item to another value into an array. Identical in behavior to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","see":[],"examples":["collection.map(user => user.tag);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function that produces an element of the new array, taking three arguments","optional":false,"type":[[["("],["value",": "],["Plugin",", "],["key",": "],["string",", "],["collection",": "],["PluginManager",") => "],["T"]]]}],"returns":[[["Array","<"],["T",">"]]],"meta":{"line":226,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"mapValues","description":"Maps each item to another value into a collection. Identical in behavior to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","see":[],"examples":["collection.mapValues(user => user.tag);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function that produces an element of the new collection, taking three arguments","optional":false,"type":[[["("],["value",": "],["Plugin",", "],["key",": "],["string",", "],["collection",": "],["PluginManager",") => "],["T"]]]}],"returns":[[["Collection","<"],["string",", "],["T",">"]]],"meta":{"line":238,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"partition","description":"Partitions the collection into two collections where the first collection\ncontains the items that passed and the second contains the items that failed.","see":[],"examples":["const [big, small] = collection.partition(guild => guild.memberCount > 250);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Plugin",", "],["key",": "],["string",", "],["collection",": "],["PluginManager",") => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["["],["Collection","<"],["K2",", "],["Plugin",">, "],["Collection","<"],["Exclude","<"],["string",", "],["K2",">, "],["Plugin",">]"]]],"meta":{"line":198,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"random","description":"Obtains unique random value(s) from this collection.","returns":[[["Plugin"]]],"returnsDescription":"A single value if no amount is provided or an array of values","meta":{"line":113,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"randomKey","description":"Obtains unique random key(s) from this collection.","returns":[[["string"]]],"returnsDescription":"A single key if no amount is provided or an array","meta":{"line":122,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"reduce","description":"Applies a function to produce a single value. Identical in behavior to\n[Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).","see":[],"examples":["collection.reduce((acc, guild) => acc + guild.memberCount, 0);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\nand `collection`","optional":false,"type":[[["("],["accumulator",": "],["T",", "],["value",": "],["Plugin",", "],["key",": "],["string",", "],["collection",": "],["PluginManager",") => "],["T"]]]},{"name":"initialValue","description":"Starting value for the accumulator","optional":true,"type":[[["T"]]]}],"returns":[[["T"]]],"meta":{"line":279,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"register","params":[{"name":"plugin","optional":false,"type":[[["any"]]]}],"returns":[[["PluginManager"]]],"meta":{"line":11,"file":"PluginManager.ts","path":"src/lib/managers"}},{"name":"reverse","description":"Identical to [Array.reverse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse)\nbut returns a Collection instead of an Array.","returns":[[["PluginManager"]]],"meta":{"line":128,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"search","params":[{"name":"basedir","optional":false,"type":[[["string"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":22,"file":"PluginManager.ts","path":"src/lib/managers"}},{"name":"set","params":[{"name":"key","optional":false,"type":[[["string"]]]},{"name":"value","optional":false,"type":[[["Plugin"]]]}],"returns":[[["PluginManager"]]]},{"name":"some","description":"Checks if there exists an item that passes a test. Identical in behavior to\n[Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).","see":[],"examples":["collection.some(user => user.discriminator === '0000');"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Plugin",", "],["key",": "],["string",", "],["collection",": "],["PluginManager",") => "],["boolean"]]]}],"returns":[[["boolean"]]],"meta":{"line":250,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"sort","description":"The sort method sorts the items of a collection in place and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.","see":[],"examples":["collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"compareFunction","description":"Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.","optional":true,"type":[[["Comparator","<"],["string",", "],["Plugin",">"]]]}],"returns":[[["PluginManager"]]],"meta":{"line":347,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"sorted","description":"The sorted method sorts the items of a collection and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.","see":[],"examples":["collection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"compareFunction","description":"Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value,\naccording to the string conversion of each element.","optional":true,"type":[[["Comparator","<"],["string",", "],["Plugin",">"]]]}],"returns":[[["Collection","<"],["string",", "],["Plugin",">"]]],"meta":{"line":372,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"sweep","description":"Removes items that satisfy the provided filter function.","params":[{"name":"fn","description":"Function used to test (should return a boolean)","optional":false,"type":[[["("],["value",": "],["Plugin",", "],["key",": "],["string",", "],["collection",": "],["PluginManager",") => "],["boolean"]]]}],"returns":[[["number"]]],"returnsDescription":"The number of removed entries","meta":{"line":169,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"tap","description":"Runs a function on the collection and returns the collection.","see":[],"examples":["collection\n .tap(coll => console.log(coll.size))\n .filter(user => user.bot)\n .tap(coll => console.log(coll.size))"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function to execute","optional":false,"type":[[["("],["collection",": "],["PluginManager",") => "],["void"]]]}],"returns":[[["PluginManager"]]],"meta":{"line":308,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"toJSON","returns":[[["Array","<"],["Plugin",">"]]],"meta":{"line":373,"file":"index.d.ts","path":"node_modules/discord.js/node_modules/@discordjs/collection/dist"}},{"name":"values","description":"Returns an iterable of values in the map","returns":[[["IterableIterator","<"],["Plugin",">"]]]}],"meta":{"line":7,"file":"PluginManager.ts","path":"src/lib/managers"}}],"typedefs":[{"name":"ArgumentType","meta":{"line":6,"file":"Argument.ts","path":"src/lib/structures"},"props":[{"name":"BOOLEAN","type":[[["5"]]]},{"name":"CHANNEL","type":[[["7"]]]},{"name":"INTEGER","type":[[["4"]]]},{"name":"MENTIONABLE","type":[[["9"]]]},{"name":"NUMBER","type":[[["10"]]]},{"name":"ROLE","type":[[["8"]]]},{"name":"STRING","type":[[["3"]]]},{"name":"SUB_COMMAND","type":[[["1"]]]},{"name":"SUB_COMMAND_GROUP","type":[[["2"]]]},{"name":"USER","type":[[["6"]]]}]},{"name":"AutoDeferType","meta":{"line":9,"file":"GClient.ts","path":"src/lib"},"props":[{"name":"EPHEMERAL","type":[[["1"]]]},{"name":"NORMAL","type":[[["2"]]]},{"name":"UPDATE","type":[[["3"]]]}]},{"name":"ChannelType","meta":{"line":19,"file":"Argument.ts","path":"src/lib/structures"},"props":[{"name":"GUILD_CATEGORY","type":[[["4"]]]},{"name":"GUILD_NEWS_THREAD","type":[[["10"]]]},{"name":"GUILD_PRIVATE_THREAD","type":[[["12"]]]},{"name":"GUILD_PUBLIC_THREAD","type":[[["11"]]]},{"name":"GUILD_STAGE_VOICE","type":[[["13"]]]},{"name":"GUILD_STORE","type":[[["6"]]]},{"name":"GUILD_TEXT","type":[[["0"]]]},{"name":"GUILD_VOICE","type":[[["2"]]]}]},{"name":"CommandType","meta":{"line":9,"file":"Command.ts","path":"src/lib/structures"},"props":[{"name":"CONTEXT_MESSAGE","type":[[["3"]]]},{"name":"CONTEXT_USER","type":[[["2"]]]},{"name":"MESSAGE","type":[[["0"]]]},{"name":"SLASH","type":[[["1"]]]}]},{"name":"ComponentType","meta":{"line":7,"file":"Component.ts","path":"src/lib/structures"},"props":[{"name":"BUTTON","type":[[["1"]]]},{"name":"SELECT_MENU","type":[[["2"]]]}]},{"name":"ArgumentOptions","meta":{"line":30,"file":"Argument.ts","path":"src/lib/structures"},"props":[{"name":"channelTypes","optional":true,"type":[[["Array","<"],["'GUILD","_"],["TEXT'"," | "],["'GUILD","_"],["NEWS","_"],["THREAD'"," | "],["'GUILD","_"],["PUBLIC","_"],["THREAD'"," | "],["'GUILD","_"],["PRIVATE","_"],["THREAD'"," | "],["'GUILD","_"],["CATEGORY'"," | "],["'GUILD","_"],["STAGE","_"],["VOICE'"," | "],["'GUILD","_"],["STORE'"," | "],["'GUILD","_"],["VOICE'"," | "],["ChannelType",">"]]]},{"name":"choices","optional":true,"type":[[["Array","<"],["CommandArgumentChoice",">"]]]},{"name":"description","optional":false,"type":[[["string"]]]},{"name":"name","optional":false,"type":[[["string"]]]},{"name":"options","optional":true,"type":[[["Array","<"],["CommandArgument"," | "],["Argument",">"]]]},{"name":"required","optional":true,"type":[[["boolean"]]]},{"name":"type","optional":false,"type":[[["'SUB","_"],["COMMAND'"," | "],["'SUB","_"],["COMMAND","_"],["GROUP'"," | "],["'STRING'"," | "],["'INTEGER'"," | "],["'BOOLEAN'"," | "],["'USER'"," | "],["'CHANNEL'"," | "],["'ROLE'"," | "],["'MENTIONABLE'"," | "],["'NUMBER'"," | "],["ArgumentType"]]]},{"name":"run","optional":true,"type":[[["("],["ctx",": "],["AutocompleteContext","<"],["CacheType",">) => "],["any"]]]}]},{"name":"AutocompleteContextOptions","meta":{"line":7,"file":"AutocompleteContext.ts","path":"src/lib/structures/contexts"},"props":[{"name":"argument","optional":false,"type":[[["CommandArgument"," | "],["Argument"]]]},{"name":"channel","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["TextBasedChannel",">"]]]},{"name":"command","optional":false,"type":[[["Command"]]]},{"name":"createdAt","optional":false,"type":[[["Date"]]]},{"name":"createdTimestamp","optional":false,"type":[[["number"]]]},{"name":"guild","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["Guild",", "],["null",", "],["Guild",", "],["Guild",">"]]]},{"name":"guildId","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["string",", "],["string",", "],["string",", "],["string",">"]]]},{"name":"interaction","optional":false,"type":[[["AutocompleteInteraction","<"],["CacheType",">"]]]},{"name":"member","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildMember",", "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",">"]]]},{"name":"memberPermissions","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">>"]]]},{"name":"user","optional":false,"type":[[["User"]]]},{"name":"value","optional":false,"type":[[["string"," | "],["number"]]]},{"name":"respond","optional":false,"type":[[["("],["choices",": "],["Array","<"],["CommandArgumentChoice",">) => "],["Promise","<"],["void",">"]]]}]},{"name":"ClientEvents","meta":{"line":3899,"file":"index.d.ts","path":"node_modules/discord.js/typings"},"props":[{"name":"apiRequest","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"apiResponse","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"applicationCommandCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"applicationCommandDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"applicationCommandUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"cacheSweep","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"channelCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"channelDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"channelPinsUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"channelUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"debug","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"emojiCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"emojiDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"emojiUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"error","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildBanAdd","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildBanRemove","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildIntegrationsUpdate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildMemberAdd","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildMemberAvailable","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildMemberRemove","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildMemberUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildMembersChunk","optional":false,"type":[[["["],["unknown",", "],["unknown",", "],["unknown","]"]]]},{"name":"guildScheduledEventCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildScheduledEventDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildScheduledEventUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildScheduledEventUserAdd","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildScheduledEventUserRemove","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildUnavailable","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"interaction","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"interactionCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"invalidRequestWarning","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"invalidated","optional":false,"type":[[["[]"]]]},{"name":"inviteCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"inviteDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"message","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"messageCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"messageDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"messageDeleteBulk","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"messageReactionAdd","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"messageReactionRemove","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"messageReactionRemoveAll","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"messageReactionRemoveEmoji","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"messageUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"presenceUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"rateLimit","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"ready","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"roleCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"roleDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"roleUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"shardDisconnect","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"shardError","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"shardReady","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"shardReconnecting","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"shardResume","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"stageInstanceCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"stageInstanceDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"stageInstanceUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"stickerCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"stickerDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"stickerUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"threadCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"threadDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"threadListSync","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"threadMemberUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"threadMembersUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"threadUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"typingStart","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"userUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"voiceStateUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"warn","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"webhookUpdate","optional":false,"type":[[["["],["unknown","]"]]]}]},{"name":"CommandArgument","meta":{"line":21,"file":"Command.ts","path":"src/lib/structures"},"props":[{"name":"channelTypes","optional":true,"type":[[["Array","<"],["'GUILD","_"],["TEXT'"," | "],["'GUILD","_"],["NEWS","_"],["THREAD'"," | "],["'GUILD","_"],["PUBLIC","_"],["THREAD'"," | "],["'GUILD","_"],["PRIVATE","_"],["THREAD'"," | "],["'GUILD","_"],["CATEGORY'"," | "],["'GUILD","_"],["STAGE","_"],["VOICE'"," | "],["'GUILD","_"],["STORE'"," | "],["'GUILD","_"],["VOICE'"," | "],["ChannelType",">"]]]},{"name":"choices","optional":true,"type":[[["Array","<"],["CommandArgumentChoice",">"]]]},{"name":"description","optional":false,"type":[[["string"]]]},{"name":"name","optional":false,"type":[[["string"]]]},{"name":"options","optional":true,"type":[[["Array","<"],["CommandArgument"," | "],["Argument",">"]]]},{"name":"required","optional":true,"type":[[["boolean"]]]},{"name":"type","optional":false,"type":[[["ArgumentType"]]]},{"name":"run","optional":true,"type":[[["("],["ctx",": "],["AutocompleteContext","<"],["CacheType",">) => "],["any"]]]}]},{"name":"CommandArgumentChoice","meta":{"line":16,"file":"Command.ts","path":"src/lib/structures"},"props":[{"name":"name","optional":false,"type":[[["string"]]]},{"name":"value","optional":false,"type":[[["string"]]]}]},{"name":"CommandContextOptions","meta":{"line":16,"file":"CommandContext.ts","path":"src/lib/structures/contexts"},"props":[{"name":"arguments","optional":false,"type":[[["CommandInteractionOptionResolver","<"],["Cached",">"]]]},{"name":"channel","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["TextBasedChannel",">"]]]},{"name":"command","optional":false,"type":[[["Command"]]]},{"name":"createdAt","optional":false,"type":[[["Date"]]]},{"name":"createdTimestamp","optional":false,"type":[[["number"]]]},{"name":"guild","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["Guild",", "],["null",", "],["Guild",", "],["Guild",">"]]]},{"name":"guildId","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["string",", "],["string",", "],["string",", "],["string",">"]]]},{"name":"interaction","optional":true,"type":[[["CommandInteraction","<"],["CacheType","> | "],["ContextMenuInteraction","<"],["CacheType",">"]]]},{"name":"member","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildMember",", "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",">"]]]},{"name":"memberPermissions","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">>"]]]},{"name":"message","optional":true,"type":[[["Message","<"],["boolean",">"]]]},{"name":"user","optional":false,"type":[[["User"]]]},{"name":"deferReply","optional":false,"type":[[["("],["options",": "],["InteractionDeferReplyOptions"," & {"],["\nfetchReply",": "],["Fetch\n","}) => "],["Promise","<"],["Fetch"," "],["extends"," "],["true"," ? "],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">> : "],["void",">"]]]},{"name":"deleteReply","optional":false,"type":[[["(..."],["args",": "],["unknown","[]) => "],["Promise","<"],["void",">"]]]},{"name":"editReply","optional":false,"type":[[["("],["options",": "],["string"," | "],["MessagePayload"," | "],["WebhookEditMessageOptions",") => "],["Promise","<"],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">>>"]]]},{"name":"fetchReply","optional":false,"type":[[["(..."],["args",": "],["unknown","[]) => "],["Promise","<"],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">>>"]]]},{"name":"followUp","optional":false,"type":[[["("],["options",": "],["string"," | "],["MessagePayload"," | "],["InteractionReplyOptions",") => "],["Promise","<"],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">>>"]]]},{"name":"reply","optional":false,"type":[[["("],["options",": "],["string"," | "],["MessagePayload"," | "],["InteractionReplyOptions"," | "],["InteractionReplyOptions"," & {"],["\nfetchReply",": "],["Fetch\n","}) => "],["Promise","<"],["Fetch"," "],["extends"," "],["true"," ? "],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">> : "],["void",">"]]]}]},{"name":"CommandOptions","meta":{"line":36,"file":"Command.ts","path":"src/lib/structures"},"props":[{"name":"arguments","optional":true,"type":[[["Array","<"],["CommandArgument"," | "],["Argument",">"]]]},{"name":"autoDefer","optional":true,"type":[[["AutoDeferType"," | "],["'EPHEMERAL'"," | "],["'NORMAL'"," | "],["'UPDATE'"]]]},{"name":"cooldown","optional":true,"type":[[["string"]]]},{"name":"description","optional":true,"type":[[["string"]]]},{"name":"fileName","optional":true,"type":[[["string"]]]},{"name":"guildId","optional":true,"type":[[["string"]]]},{"name":"inhibitors","optional":true,"type":[[["CommandInhibitors"]]]},{"name":"name","optional":false,"type":[[["string"]]]},{"name":"type","optional":false,"type":[[["Array","<"],["'MESSAGE'"," | "],["CommandType"," | "],["'SLASH'"," | "],["'CONTEXT","_"],["USER'"," | "],["'CONTEXT","_"],["MESSAGE'",">"]]]},{"name":"onError","optional":true,"type":[[["("],["ctx",": "],["CommandContext","<"],["CacheType",">, "],["error",": "],["any",") => "],["any"]]]},{"name":"run","optional":true,"type":[[["("],["ctx",": "],["CommandContext","<"],["CacheType",">) => "],["any"]]]}]},{"name":"ComponentContextOptions","meta":{"line":15,"file":"ComponentContext.ts","path":"src/lib/structures/contexts"},"props":[{"name":"arguments","optional":false,"type":[[["Array","<"],["string",">"]]]},{"name":"channel","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["TextBasedChannel",">"]]]},{"name":"component","optional":false,"type":[[["Component"]]]},{"name":"createdAt","optional":false,"type":[[["Date"]]]},{"name":"createdTimestamp","optional":false,"type":[[["number"]]]},{"name":"customId","optional":false,"type":[[["string"]]]},{"name":"guild","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["Guild",", "],["null",", "],["Guild",", "],["Guild",">"]]]},{"name":"guildId","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["string",", "],["string",", "],["string",", "],["string",">"]]]},{"name":"interaction","optional":false,"type":[[["MessageComponentInteraction","<"],["CacheType",">"]]]},{"name":"member","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildMember",", "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",">"]]]},{"name":"memberPermissions","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">>"]]]},{"name":"type","optional":false,"type":[[["'BUTTON'"," | "],["'SELECT","_"],["MENU'"]]]},{"name":"user","optional":false,"type":[[["User"]]]},{"name":"values","optional":true,"type":[[["Array","<"],["string",">"]]]},{"name":"deferReply","optional":false,"type":[[["("],["options",": "],["InteractionDeferReplyOptions"," & {"],["\nfetchReply",": "],["Fetch\n","}) => "],["Promise","<"],["Fetch"," "],["extends"," "],["true"," ? "],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">> : "],["void",">"]]]},{"name":"deferUpdate","optional":false,"type":[[["("],["options",": "],["InteractionDeferUpdateOptions"," & {"],["\nfetchReply",": "],["Fetch\n","}) => "],["Promise","<"],["Fetch"," "],["extends"," "],["true"," ? "],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">> : "],["void",">"]]]},{"name":"deleteReply","optional":false,"type":[[["(..."],["args",": "],["unknown","[]) => "],["Promise","<"],["void",">"]]]},{"name":"editReply","optional":false,"type":[[["("],["options",": "],["string"," | "],["MessagePayload"," | "],["WebhookEditMessageOptions",") => "],["Promise","<"],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">>>"]]]},{"name":"fetchReply","optional":false,"type":[[["(..."],["args",": "],["unknown","[]) => "],["Promise","<"],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">>>"]]]},{"name":"followUp","optional":false,"type":[[["("],["options",": "],["string"," | "],["MessagePayload"," | "],["InteractionReplyOptions",") => "],["Promise","<"],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">>>"]]]},{"name":"reply","optional":false,"type":[[["("],["options",": "],["string"," | "],["MessagePayload"," | "],["InteractionReplyOptions"," | "],["InteractionReplyOptions"," & {"],["\nfetchReply",": "],["Fetch\n","}) => "],["Promise","<"],["Fetch"," "],["extends"," "],["true"," ? "],["CacheTypeReducer","<"],["Cached",", "],["Message","<"],["true",">, "],["APIMessage",", "],["APIMessage"," | "],["Message","<"],["boolean",">, "],["APIMessage"," | "],["Message","<"],["boolean",">> : "],["void",">"]]]}]},{"name":"ComponentOptions","meta":{"line":15,"file":"Component.ts","path":"src/lib/structures"},"props":[{"name":"autoDefer","optional":true,"type":[[["AutoDeferType"," | "],["'EPHEMERAL'"," | "],["'NORMAL'"," | "],["'UPDATE'"]]]},{"name":"cooldown","optional":true,"type":[[["string"]]]},{"name":"fileName","optional":true,"type":[[["string"]]]},{"name":"guildId","optional":true,"type":[[["string"]]]},{"name":"inhibitors","optional":true,"type":[[["ComponentInhibitors"]]]},{"name":"name","optional":false,"type":[[["string"]]]},{"name":"type","optional":false,"type":[[["Array","<"],["'BUTTON'"," | "],["'SELECT","_"],["MENU'"," | "],["ComponentType",">"]]]},{"name":"onError","optional":true,"type":[[["("],["interaction",": "],["ComponentContext","<"],["CacheType",">, "],["error",": "],["any",") => "],["any"]]]},{"name":"run","optional":true,"type":[[["("],["interaction",": "],["ComponentContext","<"],["CacheType",">) => "],["any"]]]}]},{"name":"ConfirmOptions","meta":{"line":6,"file":"confirm.ts","path":"src/util"},"props":[{"name":"button","optional":true,"type":[[["{"],["\nemoji",": "],["string",","],["\nlabel",": "],["string",","],["\nstyle",": "],["'PRIMARY'"," | "],["'SECONDARY'"," | "],["'SUCCESS'"," | "],["'DANGER'\n","}"]]]},{"name":"ephemeral","optional":true,"type":[[["boolean"]]]},{"name":"message","optional":true,"type":[[["string"," | ("],["ctx",": "],["CommandContext","<"],["CacheType","> | "],["ComponentContext","<"],["CacheType",">) => "],["string"]]]},{"name":"time","optional":true,"type":[[["number"]]]}]},{"name":"ContextOptions","meta":{"line":18,"file":"Context.ts","path":"src/lib/structures/contexts"},"props":[{"name":"channel","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["GuildTextBasedChannel",", "],["TextBasedChannel",">"]]]},{"name":"createdAt","optional":false,"type":[[["Date"]]]},{"name":"createdTimestamp","optional":false,"type":[[["number"]]]},{"name":"guild","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["Guild",", "],["null",", "],["Guild",", "],["Guild",">"]]]},{"name":"guildId","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["string",", "],["string",", "],["string",", "],["string",">"]]]},{"name":"member","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["GuildMember",", "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",", "],["GuildMember"," | "],["APIInteractionGuildMember",">"]]]},{"name":"memberPermissions","optional":false,"type":[[["CacheTypeReducer","<"],["Cached",", "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">, "],["Readonly","<"],["Permissions",">>"]]]},{"name":"user","optional":false,"type":[[["User"]]]}]},{"name":"GClientOptions","meta":{"line":15,"file":"GClient.ts","path":"src/lib"},"props":[{"name":"allowedMentions","optional":true,"type":[[["MessageMentionOptions"]]]},{"name":"database","optional":true,"type":[[["any"]]]},{"name":"devGuildId","optional":true,"type":[[["string"]]]},{"name":"dirs","optional":true,"type":[[["Array","<"],["string",">"]]]},{"name":"failIfNotExists","optional":true,"type":[[["boolean"]]]},{"name":"http","optional":true,"type":[[["HTTPOptions"]]]},{"name":"intents","optional":false,"type":[[["BitFieldResolvable","<"],["IntentsString",", "],["number",">"]]]},{"name":"invalidRequestWarningInterval","optional":true,"type":[[["number"]]]},{"name":"makeCache","optional":true,"type":[[["CacheFactory"]]]},{"name":"messageCacheLifetime","optional":true,"type":[[["number"]]]},{"name":"messagePrefix","optional":true,"type":[[["string"]]]},{"name":"messageSupport","optional":true,"type":[[["boolean"]]]},{"name":"messageSweepInterval","optional":true,"type":[[["number"]]]},{"name":"partials","optional":true,"type":[[["Array","<"],["PartialTypes",">"]]]},{"name":"presence","optional":true,"type":[[["PresenceData"]]]},{"name":"rejectOnRateLimit","optional":true,"type":[[["Array","<"],["string","> | ("],["data",": "],["RateLimitData",") => "],["boolean"," | "],["Promise","<"],["boolean",">"]]]},{"name":"restGlobalRateLimit","optional":true,"type":[[["number"]]]},{"name":"restRequestTimeout","optional":true,"type":[[["number"]]]},{"name":"restSweepInterval","optional":true,"type":[[["number"]]]},{"name":"restTimeOffset","optional":true,"type":[[["number"]]]},{"name":"restWsBridgeTimeout","optional":true,"type":[[["number"]]]},{"name":"retryLimit","optional":true,"type":[[["number"]]]},{"name":"shardCount","optional":true,"type":[[["number"]]]},{"name":"shards","optional":true,"type":[[["number"," | "],["Array","<"],["number","> | "],["'auto'"]]]},{"name":"sweepers","optional":true,"type":[[["SweeperOptions"]]]},{"name":"unknownCommandMessage","optional":true,"type":[[["boolean"]]]},{"name":"userAgentSuffix","optional":true,"type":[[["Array","<"],["string",">"]]]},{"name":"waitGuildTimeout","optional":true,"type":[[["number"]]]},{"name":"ws","optional":true,"type":[[["WebSocketOptions"]]]}]},{"name":"ListenerOptions","meta":{"line":7,"file":"Listener.ts","path":"src/lib/structures"},"props":[{"name":"event","optional":false,"type":[[["Event"]]]},{"name":"fileName","optional":true,"type":[[["string"]]]},{"name":"name","optional":false,"type":[[["string"]]]},{"name":"once","optional":true,"type":[[["boolean"]]]},{"name":"ws","optional":true,"type":[[["WS"]]]},{"name":"run","optional":true,"type":[[["("],["args",": "],["Event"," "],["extends"," "],["keyof"," "],["ClientEvents"," ? "],["ClientEvents","["],["Event","] : "],["Array","<"],["any",">) => "],["any"]]]}]},{"name":"CommandInhibitor","type":[[["("],["ctx",": "],["CommandContext",") => "],["boolean"," | "],["any"]]],"meta":{"line":32,"file":"Command.ts","path":"src/lib/structures"},"params":[{"name":"ctx","optional":false,"type":[[["CommandContext"]]]}],"returns":[[["boolean"," | "],["any"]]]},{"name":"CommandInhibitors","type":[[["Array","<{"],["\nrun",": "],["CommandInhibitor\n","} | "],["CommandInhibitor",">"]]],"meta":{"line":33,"file":"Command.ts","path":"src/lib/structures"}},{"name":"ComponentInhibitor","type":[[["("],["ctx",": "],["ComponentContext",") => "],["boolean"," | "],["any"]]],"meta":{"line":12,"file":"Component.ts","path":"src/lib/structures"},"params":[{"name":"ctx","optional":false,"type":[[["ComponentContext"]]]}],"returns":[[["boolean"," | "],["any"]]]},{"name":"ComponentInhibitors","type":[[["Array","<{"],["\nrun",": "],["ComponentInhibitor\n","} | "],["ComponentInhibitor",">"]]],"meta":{"line":13,"file":"Component.ts","path":"src/lib/structures"}}]}